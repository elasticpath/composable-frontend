// This file is auto-generated by @hey-api/openapi-ts

import type {
  ListIntegrationsResponse,
  CreateIntegrationResponse,
  GetIntegrationResponse,
  UpdateIntegrationResponse,
} from "./types.gen"

const timestampsSchemaResponseTransformer = (data: any) => {
  if (data.created_at) {
    data.created_at = new Date(data.created_at)
  }
  if (data.updated_at) {
    data.updated_at = new Date(data.updated_at)
  }
  return data
}

const metaSchemaResponseTransformer = (data: any) => {
  if (data.meta) {
    if (data.meta.timestamps) {
      data.meta.timestamps = timestampsSchemaResponseTransformer(
        data.meta.timestamps,
      )
    }
    return data.meta
  }
  return data
}

export const listIntegrationsResponseTransformer = async (
  data: any,
): Promise<ListIntegrationsResponse> => {
  if (data.data) {
    data.data = data.data.map((item: any) => {
      if (item) {
        return metaSchemaResponseTransformer(item)
      }
      return item
    })
  }
  if (data.meta) {
    data.meta = metaSchemaResponseTransformer(data.meta)
  }
  return data
}

export const createIntegrationResponseTransformer = async (
  data: any,
): Promise<CreateIntegrationResponse> => {
  if (data.data) {
    data.data = metaSchemaResponseTransformer(data.data)
  }
  return data
}

export const getIntegrationResponseTransformer = async (
  data: any,
): Promise<GetIntegrationResponse> => {
  if (data.data) {
    data.data = metaSchemaResponseTransformer(data.data)
  }
  return data
}

export const updateIntegrationResponseTransformer = async (
  data: any,
): Promise<UpdateIntegrationResponse> => {
  if (data.data) {
    data.data = metaSchemaResponseTransformer(data.data)
  }
  if (data.meta) {
    data.meta = metaSchemaResponseTransformer(data.meta)
  }
  return data
}
