// This file is auto-generated by @hey-api/openapi-ts

export type MerchantRealmMapping = {
  /**
   * The store prefix that is assigned to this merchant realm mapping. This can be `null` if a store prefix has not been assigned.
   */
  prefix?: string
  /**
   * Represents the type of object being returned. Always `merchant-realm-mappings`.
   */
  type?: "merchant-realm-mappings"
}

export type MerchantRealmMappingResponse = {
  /**
   * The unique identifier for this merchant realm mapping.
   */
  id?: string
  /**
   * The store prefix that is assigned to this merchant realm mapping. This can be `null` if a store prefix has not been assigned.
   */
  prefix?: string
  /**
   * Represents the type of object being returned. Always `merchant-realm-mappings`.
   */
  type?: "merchant-realm-mappings"
  /**
   * The ID of the authentication realm used to sign in as administrator.
   */
  realm_id?: string
  /**
   * System-generated store ID.
   */
  store_id?: string
}

export type ErrorResponse = {
  errors: Array<_Error>
}

export type _Error = {
  /**
   * A brief summary of the error.
   */
  title: string
  /**
   * The HTTP response code of the error.
   */
  status: string
  /**
   * Optional additional detail about the error.
   */
  detail?: string
}

export type GetMerchantRealmMappingsData = {
  body?: never
  path?: never
  query?: never
  url: "/v2/merchant-realm-mappings"
}

export type GetMerchantRealmMappingsErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type GetMerchantRealmMappingsError =
  GetMerchantRealmMappingsErrors[keyof GetMerchantRealmMappingsErrors]

export type GetMerchantRealmMappingsResponses = {
  /**
   * OK
   */
  200: {
    data: MerchantRealmMappingResponse
  }
}

export type GetMerchantRealmMappingsResponse =
  GetMerchantRealmMappingsResponses[keyof GetMerchantRealmMappingsResponses]

export type GetMerchantRealmMappingData = {
  body?: never
  path: {
    /**
     * The id of the Application Key.
     */
    mapping_id: string
  }
  query?: never
  url: "/v2/merchant-realm-mappings/{mapping_id}"
}

export type GetMerchantRealmMappingErrors = {
  /**
   * Not found. The requested entity does not exist.
   */
  404: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type GetMerchantRealmMappingError =
  GetMerchantRealmMappingErrors[keyof GetMerchantRealmMappingErrors]

export type GetMerchantRealmMappingResponses = {
  /**
   * OK
   */
  200: {
    data: MerchantRealmMappingResponse
  }
}

export type GetMerchantRealmMappingResponse =
  GetMerchantRealmMappingResponses[keyof GetMerchantRealmMappingResponses]

export type UpdateMerchantRealmMappingData = {
  body: {
    data: MerchantRealmMapping
  }
  path: {
    /**
     * The id of the Application Key.
     */
    mapping_id: string
  }
  query?: never
  url: "/v2/merchant-realm-mappings/{mapping_id}"
}

export type UpdateMerchantRealmMappingErrors = {
  /**
   * Bad request. The request failed validation.
   */
  400: ErrorResponse
  /**
   * Not found. The requested entity does not exist.
   */
  404: ErrorResponse
  /**
   * Conflict
   */
  409: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type UpdateMerchantRealmMappingError =
  UpdateMerchantRealmMappingErrors[keyof UpdateMerchantRealmMappingErrors]

export type UpdateMerchantRealmMappingResponses = {
  /**
   * OK
   */
  200: {
    data: MerchantRealmMappingResponse
  }
}

export type UpdateMerchantRealmMappingResponse =
  UpdateMerchantRealmMappingResponses[keyof UpdateMerchantRealmMappingResponses]
