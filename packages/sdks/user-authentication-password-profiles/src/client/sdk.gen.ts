// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from "@hey-api/client-fetch"
import type {
  ListPasswordProfileInfosData,
  ListPasswordProfileInfosResponse,
  CreatePasswordProfileInfoData,
  CreatePasswordProfileInfoResponse,
  DeletePasswordProfileInfoData,
  DeletePasswordProfileInfoResponse,
  GetPasswordProfileInfoData,
  GetPasswordProfileInfoResponse,
  UpdatePasswordProfileInfoData,
  UpdatePasswordProfileInfoResponse,
} from "./types.gen"

export const client = createClient(createConfig())

/**
 * Get all user authentication password profile info
 */
export const listPasswordProfileInfos = <ThrowOnError extends boolean = false>(
  options: Options<ListPasswordProfileInfosData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ListPasswordProfileInfosResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/authentication-realms/{realmId}/user-authentication-info/{userAuthenticationInfoId}/user-authentication-password-profile-info",
  })
}

/**
 * Create a new user authentication password profile info
 */
export const createPasswordProfileInfo = <ThrowOnError extends boolean = false>(
  options: Options<CreatePasswordProfileInfoData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreatePasswordProfileInfoResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/authentication-realms/{realmId}/user-authentication-info/{userAuthenticationInfoId}/user-authentication-password-profile-info",
  })
}

/**
 * Delete a user authentication password profile info
 */
export const deletePasswordProfileInfo = <ThrowOnError extends boolean = false>(
  options: Options<DeletePasswordProfileInfoData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeletePasswordProfileInfoResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/authentication-realms/{realmId}/user-authentication-info/{userAuthenticationInfoId}/user-authentication-password-profile-info/{userAuthenticationPasswordProfileInfoId}",
  })
}

/**
 * Get a specific user authentication password profile info
 */
export const getPasswordProfileInfo = <ThrowOnError extends boolean = false>(
  options: Options<GetPasswordProfileInfoData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetPasswordProfileInfoResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/authentication-realms/{realmId}/user-authentication-info/{userAuthenticationInfoId}/user-authentication-password-profile-info/{userAuthenticationPasswordProfileInfoId}",
  })
}

/**
 * Update a user authentication password profile info
 */
export const updatePasswordProfileInfo = <ThrowOnError extends boolean = false>(
  options: Options<UpdatePasswordProfileInfoData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    UpdatePasswordProfileInfoResponse,
    unknown,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/authentication-realms/{realmId}/user-authentication-info/{userAuthenticationInfoId}/user-authentication-password-profile-info/{userAuthenticationPasswordProfileInfoId}",
  })
}
