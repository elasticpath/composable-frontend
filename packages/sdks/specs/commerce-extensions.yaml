openapi: "3.1.0"
info:
  version: 1.0.0
  title: Commerce Extensions Introduction
  description: |
    Commerce Extensions is a Database as a Service (DBaaS) that allows for the creation of Custom APIs and extend the capabilities of Commerce. With Custom APIs, you can efficiently manage large data sets while benefiting from both simple and complex multidimensional filtering options. Combining Custom APIs with [Composer](/docs/composer/index) enables you to deploy custom behaviors and integrations, allowing you to implement capabilities unique to your business without having to build and host that functionality from scratch.

    Commerce Extensions is the next generation of Flows. Flows are not going anywhere, but going forward as we add new features, Commerce Extensions will eventually provide all the capabilities and more that Flows does. We recommend using Custom APIs for any of your new use cases.

  contact:
    name: Elastic Path
    url: 'https://www.elasticpath.com'
    email: support@elasticpath.com
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/elasticpath/elasticpath-dev/main/LICENSE'
servers:
  - url: 'https://useast.api.elasticpath.com'
    description: US East
  - url: 'https://euwest.api.elasticpath.com'
    description: EU West
security:
  - bearerAuth: []
tags:
  - name: Custom APIs
    # language=Markdown
    description: |
      Custom APIs allow you to extend the capabilities of Commerce. With Custom APIs, you can efficiently manage large data sets while benefiting from both simple and complex multidimensional filtering options. Combining Custom APIs with [Composer](/docs/composer/index) enables you to deploy custom behaviors and integrations, allowing you to implement capabilities unique to your business without having to build and host that functionality from scratch.

      A Custom API is composed of one or more [Custom Fields](/docs/api/commerce-extensions/custom-fields) and allows you to create [Entries](/docs/api/commerce-extensions/custom-api-entries). In database terms, a Custom API can be thought of as a table, with fields representing the columns of the table, and entries serving as the database records.

      ## Custom APIs vs Non-Core Flows

      Custom APIs are the next generation of Non-Core Flows. Here is a comparison of current features of Non-Core Flows and Custom APIs. This will be updated as we release more capabilities.

      | Feature                                                                                                                   | Non-Core Flows | Commerce Extensions                                            |
      |---------------------------------------------------------------------------------------------------------------------------|----------------|----------------------------------------------------------------|
      | Build new APIs                                                                                                            | ✅              | ✅                                                              |
      | Access Level                                                                                                              | Implicit       | [Customizable](/docs/api/permissions/custom-api-role-policies) |
      | [Filtering](/docs/api/commerce-extensions/get-all-custom-entries#filtering)                                               | ⛔️             | ✅                                                              |
      | [Sorting](/docs/api/commerce-extensions/get-all-custom-entries#sorting)                                                   | ⛔️             | ✅                                                              |
      | [Events](/docs/api/commerce-extensions/custom-api-entries#events)                                                         | ⛔️             | ✅                                                              |
      | [Conditional Updates](/guides/How-To/commerce-extensions/create-a-multilocation-inventories-resource#conditional-updates) | ⛔️             | ✅                                                              |

      The [Custom Fields Overview](/docs/api/commerce-extensions/custom-fields) lists the comparison of different types and validation available in Custom APIs vs Non-Core Flows.
  - name: Custom Fields
    # language=Markdown
    description: |
      A Custom Field represents a single field of data (for example a Product Rating). A Custom API is composed of one or more Custom Fields.

      Here is a comparison of different types and validation available in Custom APIs vs Non-Core Flows.

      | Feature                           | Non-Core Flows   | Commerce Extensions                        |
      | --------------------------------- | ---------------- | ------------------------------------------ |
      | Data Type: String                 | ✅                | ✅                                          |
      | Data Type: Integer                | ✅                | ✅                                          |
      | Data Type: Float                  | ✅                | ✅                                          |
      | Data Type: Boolean                | ✅                | ✅                                          |
      | Data Type: Date                   | ✅                | ✅ Regex possible now, full support planned |
      | Data Type: One To Many            | ✅                | Planned                                    |
      | Validation: Regular Expression    | ⛔️               | ✅                                          |
      | Validation: Slug/Email            | ✅                | ✅ Replaced by Regex validation             |
      | Validation: Min/Max Value         | ✅                | ✅                                          |
      | Validation: Enum(String)          | ✅                | ✅ Replaced by Regex validation             |
      | Validation: Enum(Float/Integer)   | ✅                | ⛔️                                         |
      | Validation: Allow null values     | ⛔                | ✅                                          |
      | Validation: Unique(String)        | ⛔                | ✅                                          |
      | Validation: Unique Case Insensitivity(String)        | ⛔                | ✅                                          |
      | Validation: Immutable             | ⛔                | ✅                                          |

      ## Validation

      When [creating](/docs/api/commerce-extensions/create-a-custom-field#request) or [updating](/docs/api/commerce-extensions/update-a-custom-field#request) a Custom Field, `validation` can be used to limit the values that may be stored in the corresponding Custom API Entry.

      :::note

      All validation changes, such as those to `allow_null_values` and any type specific rules, apply to new entries only. Existing Custom API Entry records are unaffected until updated.
      
      :::

      ### Integer Validation
      - `min_value`: Specifies the minimum whole number that can be stored. If set, it must be less than `max_value`.
      - `max_value`: Specifies the maximum whole number that can be stored. If set, it must be greater than `min_value`.

      sample integer validation object:

      ```json
      {
        "validation": {
          "integer": {
            "min_value": 0,
            "max_value": 32
          }
        }
      }
      ```
      Even if no validation is set, field_type `integer` only supports values between -2^53+1 and 2^53+1. This is because the JSON format doesn't guarantee that values outside this range are portable ([Source](https://datatracker.ietf.org/doc/html/rfc7159#section-6)).
      
      
      
      ### Float Validation
      - `min_value`: Specifies the minimum number that can be stored. If set, it must be less than `max_value`.
      - `max_value`: Specifies the maximum number that can be stored. If set, it must be greater than `min_value`.

      sample float validation object:

      ```json 
      {
        "validation": {
          "float": {
            "min_value": 0.01,
            "max_value": 32.01
          }
        }
      }
      ```
      
      The `float` field_type cannot accurately represent some numbers and so using very small or large numbers might lose precision. We recommend that API clients use either the `integer` field_type if applicable , or the `string` data type if perfect precision or recall is required.

      ### String Validation
      - `min_length`: Specifies the minimum number of characters that can be stored. If set, it must be greater than 0 and less than `max_length`.
      - `max_length`: Specifies the maximum number of characters that can be stored. If set, it must be greater than 0 and `min_length`.
      - `regex`: An [RE2](https://github.com/google/re2/wiki/Syntax) regular expression used to restrict the specific characters that can be stored. It must be less than 1024 characters.
      - `unique`: Specifies whether the field must have unique constraint or not. It must be `yes` or `no`.
      - `unique_case_insensitivity`: Applies when `unique` is set to `yes`. It controls whether values with different cases (for example, `ABC` and `abc`) should conflict. It must be `true` or `false`.
        sample string validation object:

      ```json
      {
        "validation": {
          "string": {
            "min_length": 0,
            "max_length": 64,
            "regex": "^.+\\.(jpg|jpeg|png|gif|pdf)$",
            "unique": "yes"
            "unique_case_insensitivity": true
          }
        }
      }
      ```
      Even if no validation is set, field_type `string` only supports values that are up to `65535` characters long.


      ### Null Values

      All Custom Fields can be configured to restrict the storage of `null` values for that field on a Custom API Entry. By default, this is `true`.

      sample validation object :
      
      ```json
      {
        "validation": {
          "boolean": {
            "allow_null_values": false,
            "immutable": false
          }
        }
      }
      ```

      ### Immutable

      When [creating](/docs/api/commerce-extensions/create-a-custom-field#request) a Custom Field, it can be configured to be `immutable`. When set to true, the value of this field can be specified only during POST requests and cannot be modified during PUT requests. By default, this is `false`.

      sample validation object :
      
      ```json
      {
        "validation": {
          "boolean": {
            "immutable": false
          }
        }
      }
      ```

      ## Presentation

      When [creating](/docs/api/commerce-extensions/create-a-custom-field#request) or [updating](/docs/api/commerce-extensions/update-a-custom-field#request) a Custom Field, `presentation` can be used to influence the layout and order of fields within Commerce Manager. It does not affect the order of keys within JSON, nor influence any behaviour outside of Commerce Manager.
      
      ## Reserved Slugs

      The following values cannot be used as a `slug` in a Custom Field.

      - slug
      - type
      - id
      - meta
      - created_at
      - updated_at
      - links
      - relationships
      - attributes
      - attribute
      - dimension
      - dimensions
      - weight
      - weights

  - name: Custom API Entries
    # language=Markdown
    description: |
      A **Custom API Entry** is a specific instance of a resource, such as a single wishlist in a Custom API for wishlists.
      
      Custom API Entries can be accessed in two different ways, via the **extension** endpoint, or the **settings** endpoint:
      
      * Extension Endpoint: `/v2/extensions/{custom_api_slug}` - This is the primary endpoint created for use. Most clients should use this endpoint as it adheres to the semantics of the configuration. See [Commerce Extension Custom API](/docs/api/commerce-extensions/commerce-extension-custom-api)
      * Settings Endpoint: `/v2/settings/extensions/custom-apis/{custom_api_id}/entries/` - This endpoint should only be used in cases where you want to interact with your Custom APIs in a generic way in an admin capacity.
      
      Currently, the distinction between these endpoints is minimal. The extension endpoint uses a slug in the URL path, and the settings endpoint uses an ID. For most use cases involving the new Custom API, we recommend using the extension endpoint.
      
      Conceptually, the settings endpoint is analogous to reflection in most programming languages. You use it when you want to operate in a generic way. For example, we used the settings endpoint to build Commerce Manager. Another example is if you need to import and export various types of data from CSV files. Instead of writing multiple scripts for different extension endpoints, you can write one script that operates on the settings endpoint.
      
      ## Events

      You can integrate Commerce Extensions with your external systems by observing the appropriate events. For more information, see [Integrations](/docs/api/integrations/integrations-introduction).
      
      Given you have a Custom API with `api_type` of `wishlist_ext` and you want to perform additional processing when an action is taken, like when a wishlist is created:
      
      ```bash
      curl -X POST https://useast.api.elasticpath.com/v2/extensions/wishlists \
        -H "Authorization: Bearer XXXX" \
        -H "Content-Type: application/json" \
        -d $ {
          "data": {
            "type": "wishlist_ext",
            "name": "My Wishlist",
            "items_count": 0,
            "keep_purchased": false
          }
        }
      ```
      
      When you [create an integration](/docs/api/integrations/create-integration) with `wishlist_ext.created` in `observes` field.
      Then the configured `webhook` or `aws_sqs` will receive the appropriate message.
      
      You can configure integrations to observe the following events for your Custom API Entries:
      * Created
      * Updated
      * Deleted

  - name: Commerce Extension Custom API
    # language=Markdown
    description: |
      A **Commerce Extension Custom API** is the resulting API that gets created as a result of the Custom API and Custom Fields, and its Entries can be accessed via `/v2/extensions/{custom_api_slug}`.
      
      ## Events

      You can integrate Commerce Extensions with your external systems by observing the appropriate events. For more information, see [Integrations](/docs/api/integrations/integrations-introduction).
      
      Given you have a Custom API with `api_type` of `wishlist_ext` and you want to perform additional processing when an action is taken, like when a wishlist is created:
      
      ```bash
      curl -X POST https://useast.api.elasticpath.com/v2/extensions/wishlists \
        -H "Authorization: Bearer XXXX" \
        -H "Content-Type: application/json" \
        -d $ {
          "data": {
            "type": "wishlist_ext",
            "name": "My Wishlist",
            "items_count": 0,
            "keep_purchased": false
          }
        }
      ```
      
      When you [create an integration](/docs/api/integrations/create-integration) with `wishlist_ext.created` in `observes` field.
      Then the configured `webhook` or `aws_sqs` will receive the appropriate message.
      
      You can configure integrations to observe the following events for your Custom API Entries:
      * Created
      * Updated
      * Deleted

paths:
  /v2/settings/extensions/custom-apis:
    post:
      tags:
        - Custom APIs
      summary: Create a Custom API
      # Note to self: Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.
      operationId: CreateACustomApi
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  required:
                    - name
                    - type
                    - slug
                    - api_type
                  $ref: "#/components/schemas/CustomApiAttributes"
            examples:
              create_custom_api:
                summary: "Create a Custom API"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "custom_api",
                      "name": "Wishlists",
                      "description": "Specifies the description for this Custom API.",
                      "slug": "wishlists",
                      "api_type": "wishlist_ext",
                      "relationships": {
                        "parent_apis": {
                          "data": [
                            {
                              "type": "custom_api",
                              "id": "652e39d8-d613-493e-8c20-fef99ad6327a"
                            }
                          ]
                        }
                      }
                    }
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - name
                      - type
                      - slug
                      - api_type
                      - links
                      - relationships
                    $ref: "#/components/schemas/CustomApiAttributes"
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Custom APIs
      summary: Get all Custom APIs
      # language=Markdown
      description: |
        Get all Custom APIs

        ## Filtering
        The following operators and attributes are available for [filtering](/guides/Getting-Started/filtering) Custom APIs:
        
        | Attribute     | Operators                     | Example                                       |
          |---------------|-------------------------------|-----------------------------------------------|
        | `name`        | `eq`,`like`                   | `eq(name,"Wishlist")`                         |
        | `description` | `eq`,`like`                   | `like(description,*list*)`                   |
        | `slug`        | `eq`,`like`,`in`              | `like(slug,*lists)`                           |
        | `api_type`    | `eq`,`like`,`in`              | `like(api_type,wishlist*)`                    |
        | `id`          | `lt`,`le`,`eq`,`gt`,`ge`,`in` | `eq(id,7e067539-6f6c-46e1-8c55-940031b36c6a)` |
        | `created_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `ge(created_at,2024-04-29T00:00:00.000Z)`     |
        | `updated_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `le(updated_at,2024-04-29T00:00:00.000Z)`     |

        ## Sorting
        The following attributes are available for sorting. When specified, the results are sorted in ascending order based on the value of the field. To sort in descending order, prefix the attribute with `-`, for example, `-updated_at`. The default sort order is `created_at` in descending order.
        - `name`
        - `slug`
        - `api_type`
        - `id`
        - `created_at`
        - `updated_at`
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Sort'
      operationId: GetAllCustomApis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CustomApiAttributes"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
                  links:
                    $ref: "#/components/schemas/PaginationLinks"
        '400':
          $ref: '#/components/responses/BadFilterError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/settings/extensions/custom-apis/{custom_api_id}:
    parameters:
      - $ref: "#/components/parameters/CustomApiId"
    get:
      tags:
        - Custom APIs
      summary: Get a Custom API
      operationId: GetACustomApi
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/CustomApiAttributes"
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Custom APIs
      summary: Update a Custom API
      operationId: UpdateACustomApi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: "#/components/schemas/CustomApiAttributes"
                  required:
                    - type
            examples:
              update_custom_api:
                summary: "Update Custom API"
                value:
                  {
                    "data": {
                      "type": "custom_api",
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "name": "Wishlists",
                      "description": "Specifies the description for this Custom API.",
                      "slug": "wishlists",
                      "relationships": {
                        "parent_apis": {
                          "data": [
                            {
                              "type": "custom_api",
                              "id": "652e39d8-d613-493e-8c20-fef99ad6327a"
                            }
                          ]
                        }
                      }
                    }
                  }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    $ref: "#/components/schemas/CustomApiAttributes"
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Custom APIs
      summary: Delete a Custom API
      operationId: DeleteACustomApi
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/settings/extensions/custom-apis/{custom_api_id}/fields:
    parameters:
      - $ref: "#/components/parameters/CustomApiId"
    post:
      tags:
        - Custom Fields
      summary: Create a Custom Field
      operationId: CreateACustomField
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  required:
                    - name
                    - slug
                    - field_type
                  $ref: "#/components/schemas/CustomFieldAttributes"
            examples:
              string_field:
                summary: "String field example"
                value:
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Name",
                      "description": "This field stores the name of the wishlist.",
                      "slug": "name",
                      "field_type": "string",
                      "validation": {
                        "string": {
                          "min_length": 3,
                          "max_length": 128,
                          "regex": null,
                          "allow_null_values": true,
                          "immutable": false,
                          "unique": "no",
                          "unique_case_insensitivity": false
                        }
                      }
                    }
                  }
              integer_field:
                summary: "Integer field example"
                value:
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Items Count",
                      "description": "This field stores the total count of items in the wishlist.",
                      "slug": "items_count",
                      "field_type": "integer",
                      "validation": {
                        "integer": {
                          "min_value": 0,
                          "max_value": null,
                          "allow_null_values": true,
                          "immutable": false
                        }
                      }
                    }
                  }
              boolean_field:
                summary: "Boolean field example"
                value:
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Keep Purchased Items",
                      "description": "This field stores whether or not to keep purchased items on the wishlist.",
                      "slug": "keep_purchased",
                      "field_type": "boolean",
                      "validation": {
                        "boolean": {
                          "allow_null_values": true,
                          "immutable": false
                        }
                      }
                    }
                  }
              float_field:
                summary: "Float field example"
                value:
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Items Weight",
                      "description": "This field stores the total weight (in kilograms) of the items in the wishlist.",
                      "slug": "items_weight",
                      "field_type": "float",
                      "validation": {
                        "float": {
                          "min_value": 0.0,
                          "max_value": null,
                          "allow_null_values": true,
                          "immutable": false
                        }
                      }
                    }
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - name
                      - description
                      - slug
                      - field_type
                    $ref: "#/components/schemas/CustomFieldAttributes"
              examples:
                string_field:
                  summary: "String field example"
                  value:
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Name",
                        "description": "This field stores the name of the wishlist.",
                        "slug": "name",
                        "field_type": "string",
                        "validation": {
                          "string": {
                            "min_length": 3,
                            "max_length": 128,
                            "regex": null,
                            "allow_null_values": true,
                            "immutable": false,
                            "unique": "no",
                            "unique_case_insensitivity": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
                integer_field:
                  summary: "Integer field example"
                  value:
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Items Count",
                        "description": "This field stores the total count of items in the wishlist.",
                        "slug": "items_count",
                        "field_type": "integer",
                        "validation": {
                          "integer": {
                            "min_value": null,
                            "max_value": null,
                            "allow_null_values": true,
                            "immutable": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
                boolean_field:
                  summary: "Boolean field example"
                  value:
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Keep Purchased Items",
                        "description": "This field stores whether or not to keep purchased items on the wishlist.",
                        "slug": "keep_purchased",
                        "field_type": "boolean",
                        "validation": {
                          "boolean": {
                            "allow_null_values": true,
                            "immutable": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
                float_field:
                  summary: "Float field example"
                  value:
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Items Weight",
                        "description": "This field stores the total weight (in kilograms) of the items in the wishlist.",
                        "slug": "items_weight",
                        "field_type": "float",
                        "validation": {
                          "float": {
                            "min_value": 0.0,
                            "max_value": null,
                            "allow_null_values": true,
                            "immutable": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - Custom Fields
      summary: Get all Custom Fields
      # language=Markdown
      description: |
        Get all Custom Fields
        
        ## Filtering
        The following operators and attributes are available for [filtering](/guides/Getting-Started/filtering) Custom Fields:
        
        | Attribute     | Operators                     | Example                                       |
          |---------------|-------------------------------|-----------------------------------------------|
        | `name`        | `eq`,`like`                   | `eq(name,"Last Name")`                        |
        | `description` | `eq`,`like`                   | `like(description,*confidential*)`            |
        | `slug`        | `eq`,`like`,`in`              | `like(slug,*private*)`                        |
        | `field_type`  | `eq`,`in`                     | `eq(field_type,string)`                       |
        | `id`          | `lt`,`le`,`eq`,`gt`,`ge`,`in` | `eq(id,859aeba1-03c2-4822-bd4c-89afce93d7eb)` |
        | `created_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `ge(created_at,2024-04-29T00:00:00.000Z)`     |
        | `updated_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `le(updated_at,2024-04-29T00:00:00.000Z)`     |

        ## Sorting
        The following attributes are available for sorting. When specified, the results are sorted in ascending order based on the value of the field. To sort in descending order, prefix the attribute with `-`, for example, `-updated_at`. The default sort order is `created_at` in descending order.
        - `name`
        - `slug`
        - `field_type`
        - `id`
        - `created_at`
        - `updated_at`
      operationId: GetAllCustomFields
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CustomFieldAttributes"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
                  links:
                    $ref: "#/components/schemas/PaginationLinks"
              examples:
                getFields:
                  value:
                    {
                      "data": [
                        {
                          "type": "custom_field",
                          "name": "Name",
                          "description": "This field stores the name of the wishlist.",
                          "slug": "name",
                          "field_type": "string",
                          "validation": {
                            "string": {
                              "min_length": 3,
                              "max_length": 128,
                              "regex": "[a-zA-Z0-9 ]{3,128}",
                              "allow_null_values": true,
                              "immutable": false,
                              "unique": "no",
                              "unique_case_insensitivity": false
                            }
                          }
                        }
                      ],
                      "meta": {
                        "page": {
                          "limit": 100,
                          "offset": 0,
                          "current": 1,
                          "total": 1
                        },
                        "results": {
                          "total": 1
                        }
                      },
                      "links": {
                        "current": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields?page[limit]=100&page[offset]=0",
                        "first": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields?page[limit]=100&page[offset]=0",
                        "last": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields?page[limit]=100&page[offset]=0",
                        "next": null,
                        "prev": null
                      }
                    }
        '400':
          $ref: '#/components/responses/BadFilterError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/settings/extensions/custom-apis/{custom_api_id}/fields/{custom_field_id}:
    parameters:
      - $ref: "#/components/parameters/CustomApiId"
      - $ref: "#/components/parameters/CustomFieldId"
    get:
      tags:
        - Custom Fields
      summary: Get a Custom Field
      operationId: GetACustomField
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - name
                      - description
                      - slug
                      - field_type
                    $ref: "#/components/schemas/CustomFieldAttributes"
        '404':
          $ref: '#/components/responses/NotFoundError'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Custom Fields
      summary: Update a Custom Field
      operationId: UpdateACustomField
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  required:
                    - name
                    - slug
                  $ref: "#/components/schemas/CustomFieldAttributes"
            examples:
              string_field:
                summary: "String field example"
                value:
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Name",
                      "description": "This field stores the name of the wishlist.",
                      "slug": "name",
                      "field_type": "string",
                      "validation": {
                        "string": {
                          "min_length": 3,
                          "max_length": 128,
                          "regex": "^[a-zA-Z0-9 ]{3,128}$",
                          "allow_null_values": true,
                          "immutable": false,
                          "unique": "no",
                          "unique_case_insensitivity": false
                        }
                      }
                    }
                  }
              integer_field:
                summary: "Integer field example"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Items Count",
                      "description": "This field stores the total count of items in the wishlist.",
                      "slug": "items_count",
                      "validation": {
                        "integer": {
                          "min_value": 0,
                          "max_value": null,
                          "allow_null_values": true,
                          "immutable": false
                        }
                      }
                    }
                  }
              boolean_field:
                summary: "Boolean field example"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Keep Purchased Items",
                      "description": "This field stores whether or not to keep purchased items on the wishlist.",
                      "slug": "keep_purchased"
                    }
                  }
              float_field:
                summary: "Float field example"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "custom_field",
                      "name": "Items Weight",
                      "description": "This field stores the total weight (in kilograms) of the items in the wishlist.",
                      "slug": "items_weight",
                      "validation": {
                        "float": {
                          "min_value": 0.0,
                          "max_value": null,
                          "allow_null_values": true,
                          "immutable": false
                        }
                      }
                    }
                  }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - name
                      - description
                      - slug
                      - field_type
                    $ref: "#/components/schemas/CustomFieldAttributes"
              examples:
                string_field:
                  summary: "String field example"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Name",
                        "description": "This field stores the name of the wishlist.",
                        "slug": "name",
                        "field_type": "string",
                        "validation": {
                          "string": {
                            "min_length": 3,
                            "max_length": 128,
                            "regex": null,
                            "allow_null_values": true,
                            "immutable": false,
                            "unique": "no",
                            "unique_case_insensitivity": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
                integer_field:
                  summary: "Integer field example"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Items Count",
                        "description": "This field stores the total count of items in the wishlist.",
                        "slug": "items_count",
                        "field_type": "integer",
                        "validation": {
                          "integer": {
                            "min_value": 0,
                            "max_value": null,
                            "allow_null_values": true,
                            "immutable": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
                boolean_field:
                  summary: "Boolean field example"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "type": "custom_field",
                        "name": "Keep Purchased Items",
                        "description": "This field stores whether or not to keep purchased items on the wishlist.",
                        "slug": "keep_purchased",
                        "field_type": "boolean",
                        "validation": {
                          "boolean": {
                            "allow_null_values": true,
                            "immutable": false
                          }
                        },
                        "id": "859aeba1-03c2-4822-bd4c-89afce93d7eb",
                        "links": {
                          "self": "/settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6/fields/859aeba1-03c2-4822-bd4c-89afce93d7eb"
                        },
                        "meta": {
                          "timestamps": {
                            "created_at": "2017-01-10T11:41:19.244Z",
                            "updated_at": "2017-01-10T11:41:19.244Z"
                          }
                        }
                      }
                    }
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Custom Fields
      summary: Delete a Custom Field
      operationId: DeleteACustomField
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/settings/extensions/custom-apis/{custom_api_id}/entries:
    parameters:
      - $ref: "#/components/parameters/CustomApiId"
    post: &postCustomAPIEntry
      tags:
        - Custom API Entries
      summary: Create a Custom API Entry using the settings endpoint
      operationId: CreateACustomEntry
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  additionalProperties: true
                  required:
                    - name
                    - values
                  $ref: "#/components/schemas/CustomApiEntryAttributes"
            examples:
              valid_entry:
                summary: "Default Wishlist"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "wishlist_ext",
                      "name": "My Wishlist",
                      "items_count": 0,
                      "keep_purchased": false
                    }
                  }
      responses:
        '201':
          description: Created
          headers:
            ETag:
              description: "A unique identifier representing the current version of the resource. When the resource changes, the ETag value will also change. The ETag hash will be the same value as `etag_id`, and is marked as a weak entity tag string. For example: etag: W/\"5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9\", etag_id: 5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: object
                    additionalProperties: true
                    required:
                      - id
                      - type
                      - values
                    $ref: "#/components/schemas/CustomApiEntryAttributes"
              examples:
                valid_entry:
                  summary: "Default Wishlist"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "id": "7e067539-6f6c-46e1-8c55-940031b36c6a",
                        "type": "wishlist_ext",
                        "name": "My Wishlist",
                        "items_count": 0,
                        "keep_purchased": false,
                        "links": {
                          "self": "/extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a"
                        },
                        "meta": {
                          "timestamps": {
                            "updated_at": "2017-01-10T11:41:19.244Z",
                            "created_at": "2017-01-10T11:41:19.244Z"
                          },
                          "resource_version": 0,
                          "data_size": 6,
                          "etag_id": "5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
                        }
                      }
                    }
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '413':
          $ref: '#/components/responses/PayloadTooLargeError'
          description: Payload Too Large. The total size of a Custom API Entry must not exceed 64KB.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    get: &getCustomAPIEntries
      tags:
        - Custom API Entries
      summary: Get all Custom API Entries
      # language=Markdown
      description: |
        Get all Custom API Entries

        ## Filtering
        The following operators and attributes are available for [filtering](/guides/Getting-Started/filtering) all Custom API Entries:
        
        | Attribute     | Operators                     | Example                                       |
          |---------------|-------------------------------|-----------------------------------------------|
        | `id`          | `lt`,`le`,`eq`,`gt`,`ge`,`in` | `eq(id,859aeba1-03c2-4822-bd4c-89afce93d7eb)` |
        | `created_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `ge(created_at,2024-04-29T00:00:00.000Z)`     |
        | `updated_at`  | `lt`,`le`,`eq`,`gt`,`ge`      | `le(updated_at,2024-04-29T00:00:00.000Z)`     |

        The following operators and attributes may be available for filtering Custom API Entries depending on how the [Custom Fields](/docs/api/commerce-extensions/create-a-custom-field) for that Custom API are configured.
        
        | Field type | Operators                            | 
          |------------|--------------------------------------|
        | `string`   | `lt`,`le`,`eq`,`gt`,`ge`,`in`,`like` |
        | `integer`  | `lt`,`le`,`eq`,`gt`,`ge`,`in`        | 
        | `float`    | `lt`,`le`,`gt`,`ge`,`in`             |  
        | `boolean`  | `eq`                                 |
        
        Given there is a Custom Field with `"slug": "name"` and `"field_type": "string"`.
        
        When you get all Custom API Entries with query parameter: `?filter=like(name,*wish*)`.
        
        Then you will get all Custom API Entries where `name` contains the string `wish`.
        
        ## Sorting
        The following attributes are available for sorting. When specified, the results are sorted in ascending order based on the value of the field. To sort in descending order, prefix the attribute with `-`, for example, `-updated_at`. The default sort order is `created_at` in descending order.
        - `id`
        - `created_at`
        - `updated_at`
      operationId: GetAllCustomEntries
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/Filter'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      $ref: "#/components/schemas/CustomApiEntryAttributes"
                  meta:
                    $ref: "#/components/schemas/PaginationMeta"
                  links:
                    $ref: "#/components/schemas/PaginationLinks"
              examples:
                valid_entry:
                  summary: "Default Wishlist"
                  value:
                    {
                      "data": [
                        {
                          "id": "7e067539-6f6c-46e1-8c55-940031b36c6a",
                          "type": "wishlist_ext",
                          "name": "My Wishlist",
                          "items_count": 0,
                          "keep_purchased": false,
                          "links": {
                            "self": "/extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a"
                          },
                          "meta": {
                            "timestamps": {
                              "updated_at": "2017-01-10T11:41:19.244Z",
                              "created_at": "2017-01-10T11:41:19.244Z"
                            },
                            "data_size": 6,
                            "resource_version": 0,
                            "etag_id": "5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
                          }
                        }
                      ],
                      "meta": {
                        "page": {
                          "limit": 100,
                          "offset": 0,
                          "current": 1,
                          "total": 1
                        },
                        "results": {
                          "total": 1
                        }
                      },
                      "links": {
                        "current": "/extensions/wishlists?page[limit]=100&page[offset]=0",
                        "first": "/extensions/wishlists?page[limit]=100&page[offset]=0",
                        "last": "/extensions/wishlists?page[limit]=100&page[offset]=0",
                        "next": null,
                        "prev": null
                      }
                    }
        '400':
          $ref: '#/components/responses/BadFilterError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/settings/extensions/custom-apis/{custom_api_id}/entries/{custom_api_entry_id}:
    parameters:
      - $ref: "#/components/parameters/CustomApiId"
      - $ref: "#/components/parameters/CustomEntryId"
    get: &getCustomAPIEntry
      tags:
        - Custom API Entries
      summary: Get a Custom API Entry using the settings endpoint
      operationId: GetACustomEntry
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: "A unique identifier representing the current version of the resource. When the resource changes, the ETag value will also change. The ETag hash will be the same value as `etag_id`, and is marked as a weak entity tag string. For example: etag: W/\"5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9\", etag_id: 5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - values
                    $ref: "#/components/schemas/CustomApiEntryAttributes"
              examples:
                valid_entry:
                  summary: "Default Wishlist"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "id": "7e067539-6f6c-46e1-8c55-940031b36c6a",
                        "type": "wishlist_ext",
                        "name": "My Wishlist",
                        "items_count": 0,
                        "keep_purchased": false,
                        "links": {
                          "self": "/extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a"
                        },
                        "meta": {
                          "timestamps": {
                            "updated_at": "2017-01-10T11:41:19.244Z",
                            "created_at": "2017-01-10T11:41:19.244Z"
                          },
                          "data_size": 6,
                          "resource_version": 0
                        }
                      }
                    }
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put: &putCustomAPIEntry
      tags:
        - Custom API Entries
      summary: Update a Custom API Entry using the settings endpoint
      operationId: UpdateACustomEntry
      parameters:
        - in: header
          name: If-Match
          description: When If-Match is set, the value must be W/"{etag_id}". If the value of the header matches, the request completes. If not, HTTP 412 Precondition Failed is returned.
          schema:
            type: string
            format: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - data
              properties:
                data:
                  required:
                    - name
                    - values
                  $ref: "#/components/schemas/CustomApiEntryAttributes"
            examples:
              valid_entry:
                summary: "Default Wishlist"
                # language=JSON
                value: |
                  {
                    "data": {
                      "type": "wishlist_ext",
                      "name": "My Wishlist",
                      "items_count": 1,
                      "keep_purchased": false
                    }
                  }
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: "A unique identifier representing the current version of the resource. When the resource changes, the ETag value will also change."
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - values
                    $ref: "#/components/schemas/CustomApiEntryAttributes"
              examples:
                valid_entry:
                  summary: "Default Wishlist"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "id": "7e067539-6f6c-46e1-8c55-940031b36c6a",
                        "type": "wishlist_ext",
                        "name": "My Wishlist",
                        "items_count": 0,
                        "keep_purchased": false,
                        "links": {
                          "self": "/extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a"
                        },
                        "meta": {
                          "timestamps": {
                            "updated_at": "2017-01-10T11:41:19.244Z",
                            "created_at": "2017-01-10T11:41:19.244Z"
                          },
                          "data_size": 6,
                          "resource_version": 1,
                          "etag_id": "6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"
                        }
                      }
                    }
        '201':
          description: Created
          headers:
            ETag:
              description: "A unique identifier representing the current version of the resource. When the resource changes, the ETag value will also change. The ETag hash will be the same value as `etag_id`, and is marked as a weak entity tag string. For example: etag: W/\"5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9\", etag_id: 5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
              schema:
                type: string
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: object
                    additionalProperties: true
                    required:
                      - id
                      - type
                      - values
                    $ref: "#/components/schemas/CustomApiEntryAttributes"
              examples:
                valid_entry:
                  summary: "Default Wishlist"
                  # language=JSON
                  value: |
                    {
                      "data": {
                        "id": "7e067539-6f6c-46e1-8c55-940031b36c6a",
                        "type": "wishlist_ext",
                        "name": "My Wishlist",
                        "items_count": 0,
                        "keep_purchased": false,
                        "links": {
                          "self": "/extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a"
                        },
                        "meta": {
                          "timestamps": {
                            "updated_at": "2017-01-10T11:41:19.244Z",
                            "created_at": "2017-01-10T11:41:19.244Z"
                          },
                          "resource_version": 0,
                          "data_size": 6,
                          "etag_id": "5feceb66ffc86f38d952786c6d696c79c2dbc239dd4e91b46729d73a27fb57e9"
                        }
                      }
                    }
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          $ref: '#/components/responses/ConflictError'
        '412':
          $ref: '#/components/responses/PreConditionError'
        '413':
          $ref: '#/components/responses/PayloadTooLargeError'
          description: Payload Too Large. The total size of a Custom API Entry must not exceed 64KB.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

    delete: &deleteCustomAPIEntry
      tags:
        - Custom API Entries
      summary: Delete a Custom API Entry
      operationId: DeleteACustomEntry
      parameters:
        - in: header
          name: If-Match
          description: When If-Match is set, the value must be W/"{etag_id}". If the value of the header matches, the request completes. If not, HTTP 412 Precondition Failed is returned.
          schema:
            type: string
            format: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '412':
          $ref: '#/components/responses/PreConditionError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /v2/extensions/{custom_api_slug}:
    parameters:
      - $ref: "#/components/parameters/CustomApiSlug"
    get:
      <<: *getCustomAPIEntries
      summary: Get all Custom API Entries using the extensions endpoint
      operationId: GetCustomEntriesSettings
      tags:
        - Commerce Extension Custom API
    post:
      <<: *postCustomAPIEntry
      summary: Create a Custom API Entry using the extensions endpoint
      operationId: CreateACustomEntrySettings
      tags:
        - Commerce Extension Custom API
  /v2/extensions/{custom_api_slug}/{custom_api_entry_id}:
    parameters:
      - $ref: "#/components/parameters/CustomApiSlug"
      - $ref: "#/components/parameters/CustomEntryId"
    get:
      <<: *getCustomAPIEntry
      summary: Get a Custom API Entry using the extensions endpoint
      operationId: GetACustomEntrySettings
      tags:
        - Commerce Extension Custom API
    put:
      <<: *putCustomAPIEntry
      operationId: PutACustomEntrySettings
      summary: Update a Custom API Entry using the extensions endpoint
      tags:
        - Commerce Extension Custom API
    delete:
      <<: *deleteCustomAPIEntry
      operationId: DeleteACustomEntrySettings
      summary: Delete a Custom API Entry using the extensions endpoint
      tags:
        - Commerce Extension Custom API
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    CustomApiId:
      name: custom_api_id
      in: path
      required: true
      description: The id of the Custom API.
      schema:
        type: string
      example: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
    CustomApiSlug:
      name: custom_api_slug
      in: path
      required: true
      description: The slug of the Custom API.
      schema:
        type: string
      example: "wishlists"
    CustomFieldId:
      name: custom_field_id
      in: path
      required: true
      description: The id of the Custom Field.
      schema:
        type: string
        format: uuid
      example: "859aeba1-03c2-4822-bd4c-89afce93d7eb"
    CustomEntryId:
      name: custom_api_entry_id
      in: path
      required: true
      description: The id of the Custom Entry.
      schema:
        type: string
        format: uuid
      example: "7e067539-6f6c-46e1-8c55-940031b36c6a"
    PageOffset:
      name: page[offset]
      description: The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0
        maximum: 10000
        example: 0
    PageLimit:
      name: page[limit]
      description: The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0
        example: 100
    Filter:
      name: filter
      in: query
      required: false
      description: Filter attributes. For more information, see the [Filtering](/guides/Getting-Started/filtering) section.
      schema:
        type: string
        format: string
        example: eq(name,"My Wishlist")
    Sort:
      name: sort
      in: query
      required: false
      description: Sort attributes, For more information, see the [Sorting](/docs/commerce-cloud/api-overview/sorting) section.
      schema:
        type: string
        format: string
        example: name
  responses:
    BadFilterError:
      description: Bad request. The request failed validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missing-name:
              summary: Required field missing
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "detail": "Invalid filter: unknown field [version] specified in search filter, allowed fields are [api_type created_at description id name slug updated_at]",
                      "status": "400",
                      "title": "Bad Request"
                    }
                  ]
                }

    ValidationError:
      description: Bad request. The request failed validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missing-name:
              summary: Required field missing
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Bad Request",
                      "status": "400",
                      "detail": "The field 'name' is required."
                    }
                  ]
                }
    ForbiddenError:
      description: Forbidden. You do not have permission to access this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            forbidden-error:
              summary: Forbidden error
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "status": "403",
                      "detail": "You do not have permission to access this resource."
                    }
                  ]
                }
    ConflictError:
      description: Unable to perform the operation at this time.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            duplicate-custom-api:
              summary: Duplicate Custom API
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Conflict",
                      "status": "409",
                      "detail": "custom_api with the given api_type already exists"
                    }
                  ]
                }
            duplicate-custom-field:
              summary: Duplicate Custom Field
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Conflict",
                      "status": "409",
                      "detail": "custom_field with the given slug already exists"
                    }
                  ]
                }
    InternalServerError:
      description: Internal server error. There was a system failure in the platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            internal-server-error:
              summary: Internal server error
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Internal Server Error",
                      "status": "500",
                      "detail": "there was a problem processing your request"
                    }
                  ]
                }
    ServiceUnavailable:
      description: The service is temporarily unavailable. This request can be safely retried.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            service-unavailable:
              summary: Service Unavailable
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "detail": "An unknown error occurred",
                      "status": "503",
                      "title": "Service Unavailable"
                    }
                  ]
                }
    NotFoundError:
      description: Not found. The requested entity does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            not-found:
              summary: Requested entity not found
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Not Found",
                      "status": "404",
                      "detail": "Not found"
                    }
                  ]
                }
    PayloadTooLargeError:
      description: Payload Too Large.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            too-large:
              summary: Requested entity too large
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Request Entity Too Large",
                      "status": "413",
                      "detail": "Maximum entry size reached."
                    }
                  ]
                }
    PreConditionError:
      description: Precondition Failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            pre-request-failed:
              summary: Provided ETag does not match the current ETag.
              # language=JSON
              value: |
                {
                  "errors": [
                    {
                      "title": "Precondition Failed",
                      "status": "412",
                      "detail": "The provided ETag 'W/\"4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a\"', does not match the current ETag 'W/\"ef2d127de37b942baad06145e54b0c619a1f22327b2ebbcfbec78f5564afe39d\"'."
                    }
                  ]
                }
  schemas:
    CustomApiAttributes:
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the Custom API.
          readOnly: true
        type:
          type: string
          const: custom_api
          description: Specifies the type of the resource object, use `custom_api` for Custom APIs.
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Specifies the name of this Custom API.
          examples:
            - "Wishlists"
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: Specifies the description for this Custom API.
          examples:
            - "An API that represents a wishlist."
        slug:
          type: string
          pattern: "^[a-z0-9_-]{1,63}$"
          description: Specifies a unique slug identifier for the Custom API. The API Entries for the created Custom API will be accessible at the location `/v2/extensions/<slug>`.
          examples:
            - "wishlists"
        api_type:
          type: string
          pattern: "^[a-z0-9_]{1,59}_ext$"
          description: Specifies a unique API type for this Custom API. Entries for this API will use this value for their `type` field. This field must be suffixed with `_ext` to distinguish it from built in APIs.
          examples:
            - "wishlist_ext"
        allow_upserts:
          type: boolean
          description: Controls whether upsert operations are allowed for Custom API Entries via the `PUT` method. When set to `true`, it allows the creation of new Custom API Entries using `PUT` if the record doesn't exist, and updates the existing record if it does. When `false`, `PUT` requests can only update existing entries.
          default: false
        links:
          readOnly: true
          $ref: '#/components/schemas/SelfLinkCustomApi'
        meta:
          readOnly: true
          $ref: '#/components/schemas/Meta'
        relationships:
          readOnly: true
          $ref: '#/components/schemas/Relationships'
    BaseCustomFieldAttributes:
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the Custom Field.
          readOnly: true
        type:
          type: string
          const: custom_field
          description: Specifies the type of the resource object, use `custom_field` for Custom Field.
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Specifies the name of this Custom Field.
          examples:
            - "Wishlist Name"
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: Specifies the description for this Custom API.
          examples:
            - "This field stores the name of the wishlist."
        slug:
          type: string
          minLength: 1
          maxLength: 63
          description: Specifies a slug that must be unique within the scope of the Custom API. This slug will be value as the key in the JSON Object in all entries.
          examples:
            - "name"
        field_type:
          type: string
          enum:
            - string
            - integer
            - boolean
            - float
          description: Specifies the type of the field. This field cannot be updated.
          examples:
            - "string"
            - "integer"
            - "boolean"
            - "float"
        use_as_url_slug:
          type: boolean
          description: |
            Enabling this field will mean Custom API Entries created in this Custom API will use this value in the URL instead of the `id` attribute. In order to set this field, the field must be a string, and unique, not allow null values, no entries have been created yet, and this field cannot be set to true on another custom field. This field cannot be updated. In addition to any validation rules you create, the values must be [Unreserved URL Characters](https://datatracker.ietf.org/doc/html/rfc3986#section-2.3) (i.e., be alpha-numeric, or one of `-`, `.`, `_` or `~`).
        presentation:
          type: object
          properties:
            sort_order:
              type: integer
              description: Specifies the order of the field in the User Interface.
              example: 10
              default: 0
              minimum: 0
              maximum: 1000
        links:
          readOnly: true
          $ref: '#/components/schemas/SelfLink'
        meta:
          readOnly: true
          $ref: '#/components/schemas/Meta'
    StringCustomFieldAttributes:
      allOf:
        - $ref: '#/components/schemas/BaseCustomFieldAttributes'
        - type: object
          properties:
            validation:
              type: object
              properties:
                string:
                  type: object
                  properties:
                    min_length:
                      type: [integer, 'null']
                      description: Specifies the minimum number of characters that can be stored.
                      minimum: 0
                      maximum: 65535
                      example: 1
                    max_length:
                      type: [integer, 'null']
                      description: Specifies the minimum number of characters that can be stored.
                      minimum: 0
                      maximum: 65535
                    regex:
                      type: [string, 'null']
                      description: |
                        An [RE2](https://github.com/google/re2/wiki/Syntax) regular expression that used to restrict the specific characters that can be stored.
                      minLength: 0
                      maxLength: 1024
                      example: 1
                    allow_null_values:
                      type: boolean
                      description: |
                        When set to `true`, this allows `null` values for that field on Custom API Entries. When set to `false`, storing `null` values is not permitted.
                        nullable: false
                      default: true
                    unique:
                      type: string
                      enum:
                        - "yes"
                        - "no"
                      description: |
                        If `yes`, this prevents two Custom API entries from having the same value for this field within the Custom API. When set to `no` (the default), 
                        multiple Custom API entries may have the same value
                      default: "no"
                    unique_case_insensitivity:
                      type: boolean
                      description: |
                        Controls case-insensitive uniqueness for this field. Can only be set to `true` if `unique` is set to `yes`. 
                        If `true`, prevents two Custom API entries from having the same value for this field within the Custom API, ignoring case differences. 
                        When set to `false` (the default), case is considered when checking for uniqueness. 
                        This value can only be set during field creation and cannot be modified afterwards.
                      default: false
                    immutable:
                      type: boolean
                      description: |
                        When set to true, the value of this field can be specified only during POST requests and cannot be modified during PUT requests.
                      default: false
    IntegerCustomFieldAttributes:
      allOf:
        - $ref: '#/components/schemas/BaseCustomFieldAttributes'
        - type: object
          properties:
            validation:
              type: object
              properties:
                integer:
                  type: object
                  properties:
                    min_value:
                      type: [integer, 'null']
                      description: Specifies the minimum whole number that can be stored.
                    max_value:
                      type: [integer, 'null']
                      description: Specifies the maximum whole number that can be stored.
                    allow_null_values:
                      type: [boolean, 'null']
                      description: |
                        When set to `true`, this allows `null` values for that field on Custom API Entries. When set to `false`, storing `null` values is not permitted.
                      default: true
                    immutable:
                      type: [boolean, 'null']
                      description: |
                        When set to `true`, prevents changing the field.
                      default: false
    BooleanCustomFieldAttributes:
      allOf:
        - $ref: '#/components/schemas/BaseCustomFieldAttributes'
        - type: object
          properties:
            validation:
              type: object
              properties:
                boolean:
                  type: object
                  properties:
                    allow_null_values:
                      type: [boolean, 'null']
                      description: |
                        When set to `true`, this allows `null` values for that field on Custom API Entries. When set to `false`, storing `null` values is not permitted.
                      default: true
                    immutable:
                      type: [ boolean, 'null' ]
                      description: |
                        When set to `true`, prevents changing the field.
                      default: false
    FloatCustomFieldAttributes:
      allOf:
        - $ref: '#/components/schemas/BaseCustomFieldAttributes'
        - type: object
          properties:
            validation:
              type: object
              properties:
                float:
                  type: object
                  properties:
                    min_value:
                      type: [integer, 'null']
                      description: Specifies the minimum whole number that can be stored.
                    max_value:
                      type: [integer, 'null']
                      description: Specifies the maximum whole number that can be stored.
                    allow_null_values:
                      type: [boolean, 'null']
                      description: |
                        When set to `true`, this allows `null` values for that field on Custom API Entries. When set to `false`, storing `null` values is not permitted.
                      default: true
                    immutable:
                      type: [ boolean, 'null' ]
                      description: |
                        When set to `true`, prevents changing the field.
                      default: false
    CustomFieldAttributes:
      anyOf:
        - $ref: '#/components/schemas/BooleanCustomFieldAttributes'
        - $ref: '#/components/schemas/StringCustomFieldAttributes'
        - $ref: '#/components/schemas/IntegerCustomFieldAttributes'
        - $ref: '#/components/schemas/FloatCustomFieldAttributes'
      discriminator:
        propertyName: field_type
        mapping:
          boolean: '#/components/schemas/BooleanCustomFieldAttributes'
          float: '#/components/schemas/FloatCustomFieldAttributes'
          integer: '#/components/schemas/IntegerCustomFieldAttributes'
          string: '#/components/schemas/StringCustomFieldAttributes'
    CustomApiEntryAttributes:
      additionalProperties: true
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the Custom API Entry
          readOnly: true
          examples:
            - 7e067539-6f6c-46e1-8c55-940031b36c6a
        type:
          type: string
          description: Specifies the type of the resource object, use the `api_type` of the [Custom API](/docs/api/commerce-extensions/create-a-custom-api) for Custom API Entry.
          examples:
            - "wishlist_ext"
        links:
          readOnly: true
          $ref: '#/components/schemas/SelfLinkCustomApiEntry'
        meta:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/Meta'
            - type: object
              required:
                - data_size
              properties:
                data_size:
                  type: integer
                  description: Specifies the sum of the size of each value stored for the Custom API Entry in bytes. The total size of a Custom API Entry must not exceed 64KB.
                  readOnly: true
                  example: 6
                  default: 0
                resource_version:
                  type: integer
                  description: A unique identifier representing the current version of the resource. When the resource changes, the `resource_version` value will also change.
                  readOnly: true
                  example: 4
                  default: 0
                etag_id:
                  type: string
                  description: A unique identifier representing the current version of the resource that is a hashed string. When the resource changes, the `etag_id` will also change.
                  readOnly: true
                  example: "6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b"
    ErrorResponse:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      required:
        - status
        - title
      properties:
        title:
          type: string
          description: A brief summary of the error.
          examples:
            - "Bad Request"
        status:
          type: string
          format: string
          description: The HTTP response code of the error.
          examples:
            - "400"
        detail:
          type: string
          description: Optional additional detail about the error.
          examples:
            - "The field 'name' is required"
    SelfLink:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkURI'
      readOnly: true
    SelfLinkCustomApi:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkURI'
          example: /settings/extensions/custom-apis/3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Specifies the URI of the Custom API.
      readOnly: true
    SelfLinkCustomApiEntry:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkURI'
          example: /extensions/wishlists/7e067539-6f6c-46e1-8c55-940031b36c6a
          description: Specifies the URI of the Custom API Entry.
      readOnly: true
    LinkURI:
      type: [string, 'null']
      format: uri
      readOnly: true
    Timestamps:
      type: object
      required:
        - created_at
        - updated_at
      properties:
        updated_at:
          type: string
          example: 2017-01-10T11:41:19.244Z
          description: Specifies the date the entity is created.
          readOnly: true
        created_at:
          type: string
          example: 2017-01-10T11:41:19.244Z
          description: Specifies the date the entity is last updated.
          readOnly: true
    Meta:
      type: object
      required:
        - timestamps
      properties:
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    PaginationMeta:
      type: object
      required:
        - page
        - results
      properties:
        results:
          type: object
          properties:
            total:
              description: Total number of results for the entire collection.
              type: integer
        page:
          type: object
          properties:
            limit:
              description: The maximum number of records for all pages.
              type: integer
              example: 100
            offset:
              description: The current offset by number of pages.
              type: integer
              example: 0
            current:
              description: The current number of pages.
              type: integer
              example: 1
            total:
              description: The total number of records for the entire collection.
              type: integer
              example: 1
    Relationships:
      type: object
      required:
        - parent_apis
      properties:
        parent_apis:
          $ref: '#/components/schemas/ParentAPIs'
    ParentAPIs:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Data'
    Data:
      type: array
      items:
        $ref: '#/components/schemas/DataItem'
    DataItem:
      type: object
      required:
        - id
        - type
      properties:
        id:
          description: |
            The unique identifier for the related Custom API. When the `type` of an object is set to `api_location` then `id` must be `/v2/extensions`.
            When the `type` of an object is set to `custom_api`, then `id` must be that of a Custom API that results in a relationship that does not have a depth exceeding 2 and does not result in a cycle.
          type: string
          example: 652e39d8-d613-493e-8c20-fef99ad6327a
        type:
          description: Specifies the type of parent relationship, can be `custom_api` or `api_location`.
          type: string
          enum:
            - custom_api
            - api_location
    PaginationLinks:
      required:
        - current
        - first
        - last
        - next
        - prev
      type: object
      properties:
        current:
          description: Always the current page.
          type: [string, 'null']
          format: uri
          example: "/v2/settings/custom-apis?page[offset]=0&page[limit]=100"
        first:
          description: Always the first page.
          type: [string, 'null']
          format: uri
          example: "/v2/settings/custom-apis?page[offset]=0&page[limit]=100"
        last:
          description: Always `null` if there is only one page.
          type: [string, 'null']
          format: uri
          example: "/v2/settings/custom-apis?page[offset]=0&page[limit]=100"
        next:
          description: Always `null` if there is only one page.
          type: [string, 'null']
          example: null
        prev:
          description: Always `null` if the user is on the first page.
          type: [string, 'null']
          example: null
