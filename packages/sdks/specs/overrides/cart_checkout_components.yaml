components:
  parameters:
    CartInclude:
      name: include
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - items
            - tax_items
            - custom_discounts
            - promotions
    CartCheckoutFilter:
      name: filter
      in: query
      required: false
      schema:
        type: string
        format: string
        description: |
          For the general syntax, see [**Filtering**](/guides/Getting-Started/filtering), but you must go to a specific endpoint documentation to understand the attributes and operators an endpoint supports.
        example: eq(name,Alan Turing)
    OrdersInclude:
      name: include
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - items
    OrderInclude:
      name: include
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - items
    CartCheckoutLimit:
      description: The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
      name: page[limit]
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
    CartCheckoutOffset:
      description: The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
      name: page[offset]
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 10000
  schemas:
    CartsResponse:
      title: Carts Response
      type: object
      properties:
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CartItemObject'
              - $ref: '#/components/schemas/CustomItemCartObject'
              - $ref: '#/components/schemas/SubscriptionItemCartObject'
              - $ref: '#/components/schemas/PromotionItemCartObject'
    CartEntityResponse:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/CartResponse'
        included:
          $ref: '#/components/schemas/CartIncluded'
      required:
        - data
    OrderCollectionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        included:
          $ref: '#/components/schemas/OrdersIncluded'
        links:
          $ref: '#/components/schemas/Response.PageLinks'
        meta:
          $ref: '#/components/schemas/Response.Meta.Orders'
    OrderEntityResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderResponse'
        included:
          $ref: '#/components/schemas/OrderIncluded'
    CartIncludedPromotion:
        type: object
        required:
          - id
          - name
          - automatic
          - promotion_source
          - start
          - end
        properties:
            id:
                type: string
                format: uuid
                description: The unique identifier of the promotion.
            name:
                type: string
                description: The name of the promotion.
            description:
                type: string
                description: A description of the promotion.
            automatic:
                type: boolean
                description: Indicates if the promotion is automatic.
            promotion_source:
                type: string
                description: The source of the promotion.
            start:
                type: string
                format: date-time
                description: The start date and time of the promotion.
            end:
                type: string
                format: date-time
                description: The end date and time of the promotion.
    SubscriptionItemCartObject:
      title: Subscription Item Cart Object
      type: object
      allOf:
        - $ref: '#/components/schemas/SubscriptionItemObjectData'
        - $ref: '#/components/schemas/CartItemResponse'
    PromotionItemCartObject:
      title: Promotion Item Cart Object
      type: object
      allOf:
        - $ref: '#/components/schemas/PromotionItemObjectData'
        - $ref: '#/components/schemas/CartItemResponse'
      properties:
        id:
          type: string
          description: The unique identifier of the promotion item.
    CustomItemCartObject:
      title: Custom Item Cart Object
      type: object
      allOf:
        - $ref: '#/components/schemas/CustomItemObjectData'
        - $ref: '#/components/schemas/CartItemResponse'
      properties:
        id:
          type: string
          description: The unique identifier of the custom item.
    CartIncluded:
      description: Included is an array of resources that are included in the response.
      type: object
      properties:
        items:
          description: The cart items associated with a cart.
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/CartItemObject'
              - $ref: '#/components/schemas/CustomItemCartObject'
              - $ref: '#/components/schemas/SubscriptionItemCartObject'
              - $ref: '#/components/schemas/PromotionItemCartObject'
        tax_items:
          description: The tax items associated with a cart.
          type: array
          items:
            $ref: '#/components/schemas/CartsItemsTaxesObject'
        custom_discounts:
          description: The custom discounts associated with a cart.
          type: array
          items:
            $ref: '#/components/schemas/CartsCustomDiscountsObject'
        promotions:
            description: The promotions associated with a cart.
            type: array
            items:
                $ref: '#/components/schemas/CartIncludedPromotion'
    OrdersIncluded:
      description: Included is an array of resources that are included in the response.
      type: object
      properties:
        items:
          description: The order items associated with an order.
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
    OrderIncluded:
      description: Included is an array of resources that are included in the response.
      type: object
      properties:
        items:
          description: The order items associated with an order.
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
    TransactionResponse:
      properties:
        client_parameters:
          description: >-
            Client parameters required for payment processing. Present when gateway is paypal_express_checkout.
          type: object
          properties:
            token:
              description: The token for the payment session.
              type: string
            redirect_url:
              description: The URL to redirect the customer to complete the payment.
              type: string
        payment_details:
          description: >-
            Additional payment details specific to the gateway. Present when gateway is paypal_express_checkout.
          type: object
          properties:
            detailed_status:
              description: Detailed status information from the payment gateway.
              type: string
        next_actions:
          description: >-
            Available actions that can be performed on this transaction. Present when gateway is paypal_express_checkout.
          type: array
          items:
            type: string
            enum:
              - cancel
              - capture
              - refund
  securitySchemes:
    bearerAuth:
      type: http
      name: Authorization
      in: header
      scheme: bearer