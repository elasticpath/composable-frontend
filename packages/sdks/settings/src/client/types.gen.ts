// This file is auto-generated by @hey-api/openapi-ts

/**
 * Displays the method used to calculate card and order totals.
 */
export type CalculationMethod = "line" | "simple"

export type Settings = {
  /**
   * Describes the type of request payload you’re sending. Set this value to `settings`.
   */
  type: string
  /**
   *  Indicates the number of results per page (max: `100`).
   */
  page_length?: number
  /**
   * Displays child products or not in product listings.
   */
  list_child_products?: boolean
  /**
   * Represents an array of alpha2 codes for supported languages.
   */
  additional_languages?: Array<string>
  /**
   * Displays the method used to calculate card and order totals.
   */
  calculation_method?: "line" | "simple"
  /**
   * Indicates an array of fields that are required for creating an [address](/docs/api/addresses/account-addresses).
   */
  address_mandatory_fields?: Array<string>
}

export type SettingsData = {
  data?: Settings & {
    /**
     * The currency limit.
     */
    currency_limit?: number
    /**
     * The field limit.
     */
    field_limit?: number
    /**
     * The integration limit.
     */
    integration_limit?: number
    /**
     * The event limit.
     */
    event_limit?: number
    /**
     * The filter limit.
     */
    filter_limit?: number
    /**
     * The tax item limit.
     */
    tax_item_limit?: number
    /**
     * The promotions limit.
     */
    promotions_limit?: number
    /**
     * The promotion codes limit.
     */
    promotion_codes_limit?: number
    /**
     * The page offset limit.
     */
    page_offset_limit?: number
  }
}

export type SettingsResponse = SettingsData & {
  meta?: {
    owner?: string
  }
}

export type SettingsCart = {
  data?: {
    /**
     * Describes the type of request payload you’re sending. Set this value to `settings`.
     */
    type: string
    /**
     * Indicates the number of days before a cart expires.
     */
    cart_expiry_days?: number
    discounts?: {
      /**
       * When `true`, custom discounts are enabled. Default is false. This setting only affects the new empty carts while the existing active carts will not be affected.
       */
      custom_discounts_enabled?: boolean
      /**
       * When set to `true`, this parameter allows the cart to use rule promotions.
       */
      use_rule_promotions?: boolean
    }
  }
}

export type _Error = {
  /**
   * A brief summary of the error.
   */
  title: string
  /**
   * The HTTP response code of the error.
   */
  status: string
  /**
   * Optional additional detail about the error.
   */
  detail?: string
}

export type ErrorResponse = {
  errors: Array<_Error>
}

export type DeleteV2SettingsData = {
  body?: never
  path?: never
  query?: never
  url: "/v2/settings"
}

export type DeleteV2SettingsErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse
  /**
   * Internal server error.
   */
  default: ErrorResponse
}

export type DeleteV2SettingsError =
  DeleteV2SettingsErrors[keyof DeleteV2SettingsErrors]

export type DeleteV2SettingsResponses = {
  /**
   * No Content
   */
  204: void
}

export type DeleteV2SettingsResponse =
  DeleteV2SettingsResponses[keyof DeleteV2SettingsResponses]

export type GetV2SettingsData = {
  body?: never
  path?: never
  query?: never
  url: "/v2/settings"
}

export type GetV2SettingsErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse
  /**
   * Internal server error.
   */
  default: ErrorResponse
}

export type GetV2SettingsError = GetV2SettingsErrors[keyof GetV2SettingsErrors]

export type GetV2SettingsResponses = {
  /**
   * OK
   */
  200: SettingsResponse
}

export type GetV2SettingsResponse =
  GetV2SettingsResponses[keyof GetV2SettingsResponses]

export type PutV2SettingsData = {
  body?: Settings
  path?: never
  query?: never
  url: "/v2/settings"
}

export type PutV2SettingsErrors = {
  /**
   * Bad Request
   */
  400: ErrorResponse
  /**
   * Internal server error.
   */
  default: ErrorResponse
}

export type PutV2SettingsError = PutV2SettingsErrors[keyof PutV2SettingsErrors]

export type PutV2SettingsResponses = {
  /**
   * OK
   */
  200: SettingsResponse
}

export type PutV2SettingsResponse =
  PutV2SettingsResponses[keyof PutV2SettingsResponses]

export type GetV2SettingsCartData = {
  body?: never
  path?: never
  query?: never
  url: "/v2/settings/cart"
}

export type GetV2SettingsCartErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse
  /**
   * Internal server error.
   */
  default: ErrorResponse
}

export type GetV2SettingsCartError =
  GetV2SettingsCartErrors[keyof GetV2SettingsCartErrors]

export type GetV2SettingsCartResponses = {
  /**
   * OK
   */
  200: SettingsCart
}

export type GetV2SettingsCartResponse =
  GetV2SettingsCartResponses[keyof GetV2SettingsCartResponses]

export type PutV2SettingsCartData = {
  body?: SettingsCart
  path?: never
  query?: never
  url: "/v2/settings/cart"
}

export type PutV2SettingsCartErrors = {
  /**
   * Bad Request
   */
  400: ErrorResponse
  /**
   * Internal server error.
   */
  default: ErrorResponse
}

export type PutV2SettingsCartError =
  PutV2SettingsCartErrors[keyof PutV2SettingsCartErrors]

export type PutV2SettingsCartResponses = {
  /**
   * OK
   */
  200: SettingsCart
}

export type PutV2SettingsCartResponse =
  PutV2SettingsCartResponses[keyof PutV2SettingsCartResponses]
