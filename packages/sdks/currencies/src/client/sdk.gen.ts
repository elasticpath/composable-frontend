// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from "@hey-api/client-fetch"
import type {
  GetAllCurrenciesData,
  GetAllCurrenciesResponse,
  GetAllCurrenciesError,
  CreateACurrencyData,
  CreateACurrencyResponse,
  CreateACurrencyError,
  DeleteACurrencyData,
  DeleteACurrencyResponse,
  DeleteACurrencyError,
  GetACurrencyData,
  GetACurrencyResponse,
  GetACurrencyError,
  UpdateACurrencyData,
  UpdateACurrencyResponse,
  UpdateACurrencyError,
} from "./types.gen"

export const client = createClient(createConfig())

/**
 * Get all Currencies
 * :::caution
 *
 * This endpoint is for Administrator use only. Do not use this endpoint on your customer-facing frontends.
 *
 * :::
 *
 */
export const getAllCurrencies = <ThrowOnError extends boolean = false>(
  options?: Options<GetAllCurrenciesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetAllCurrenciesResponse,
    GetAllCurrenciesError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/currencies",
  })
}

/**
 * Create a Currency
 * :::caution
 *
 * This endpoint is for Administrator use only. Do not use this endpoint on your customer-facing frontends.
 *
 * :::
 *
 */
export const createACurrency = <ThrowOnError extends boolean = false>(
  options?: Options<CreateACurrencyData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateACurrencyResponse,
    CreateACurrencyError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/currencies",
  })
}

/**
 * Delete a Currency
 * :::caution
 *
 * - This endpoint is for Administrator use only. Do not use this endpoint on your customer-facing frontends.
 * - You canâ€™t delete a default currency.
 *
 * :::
 *
 */
export const deleteACurrency = <ThrowOnError extends boolean = false>(
  options: Options<DeleteACurrencyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteACurrencyResponse,
    DeleteACurrencyError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/currencies/{currencyID}",
  })
}

/**
 * Get a Currency
 * :::caution
 *
 * This endpoint is for Administrator use only. Do not use this endpoint on your customer-facing frontends.
 *
 * :::
 *
 */
export const getACurrency = <ThrowOnError extends boolean = false>(
  options: Options<GetACurrencyData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetACurrencyResponse,
    GetACurrencyError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/currencies/{currencyID}",
  })
}

/**
 * Update a Currency
 * :::caution
 *
 * This endpoint is for Administrator use only. Do not use this endpoint on your customer-facing frontends.
 *
 * :::
 *
 */
export const updateACurrency = <ThrowOnError extends boolean = false>(
  options: Options<UpdateACurrencyData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    UpdateACurrencyResponse,
    UpdateACurrencyError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/currencies/{currencyID}",
  })
}
