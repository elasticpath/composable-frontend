// This file is auto-generated by @hey-api/openapi-ts

import type {
  GetShippingGroupsResponse,
  CreateShippingGroupResponse,
  GetShippingGroupByIdResponse,
  UpdateShippingGroupResponse,
  GetOrderShippingGroupsResponse,
  CreateOrderShippingGroupResponse,
  GetShippingGroupsByIdResponse,
  PutShippingGroupByIdResponse,
} from "./types.gen"

const deliveryEstimateSchemaResponseTransformer = (data: any) => {
  if (data.start) {
    data.start = new Date(data.start)
  }
  if (data.end) {
    data.end = new Date(data.end)
  }
  return data
}

const shippingGroupResponseSchemaResponseTransformer = (data: any) => {
  if (data.delivery_estimate) {
    data.delivery_estimate = deliveryEstimateSchemaResponseTransformer(
      data.delivery_estimate,
    )
  }
  if (data.createdAt) {
    data.createdAt = new Date(data.createdAt)
  }
  if (data.updatedAt) {
    data.updatedAt = new Date(data.updatedAt)
  }
  return data
}

export const getShippingGroupsResponseTransformer = async (
  data: any,
): Promise<GetShippingGroupsResponse> => {
  if (data.data) {
    data.data = data.data.map((item: any) => {
      return shippingGroupResponseSchemaResponseTransformer(item)
    })
  }
  return data
}

export const createShippingGroupResponseTransformer = async (
  data: any,
): Promise<CreateShippingGroupResponse> => {
  data = shippingGroupResponseSchemaResponseTransformer(data)
  return data
}

export const getShippingGroupByIdResponseTransformer = async (
  data: any,
): Promise<GetShippingGroupByIdResponse> => {
  if (data.data) {
    data.data = shippingGroupResponseSchemaResponseTransformer(data.data)
  }
  return data
}

export const updateShippingGroupResponseTransformer = async (
  data: any,
): Promise<UpdateShippingGroupResponse> => {
  data = shippingGroupResponseSchemaResponseTransformer(data)
  return data
}

export const getOrderShippingGroupsResponseTransformer = async (
  data: any,
): Promise<GetOrderShippingGroupsResponse> => {
  if (data.data) {
    data.data = data.data.map((item: any) => {
      return shippingGroupResponseSchemaResponseTransformer(item)
    })
  }
  return data
}

export const createOrderShippingGroupResponseTransformer = async (
  data: any,
): Promise<CreateOrderShippingGroupResponse> => {
  if (data.data) {
    data.data = shippingGroupResponseSchemaResponseTransformer(data.data)
  }
  return data
}

export const getShippingGroupsByIdResponseTransformer = async (
  data: any,
): Promise<GetShippingGroupsByIdResponse> => {
  if (data.data) {
    data.data = shippingGroupResponseSchemaResponseTransformer(data.data)
  }
  return data
}

export const putShippingGroupByIdResponseTransformer = async (
  data: any,
): Promise<PutShippingGroupByIdResponse> => {
  data = shippingGroupResponseSchemaResponseTransformer(data)
  return data
}
