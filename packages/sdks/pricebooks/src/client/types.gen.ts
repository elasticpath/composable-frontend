// This file is auto-generated by @hey-api/openapi-ts

/**
 * This is a json-api style part of an error response
 */
export type ErrorPricebooks = {
  detail?: string
  status?: string
  title?: string
}

/**
 * This is a json-api style error response
 */
export type ErrorResponsePricebooks = {
  errors?: Array<ErrorPricebooks>
}

/**
 * This is a json-api style part of an error response
 */
export type ErrorPrices = {
  detail?: string
  status?: string
  title?: string
}

/**
 * This is a json-api style Error response
 */
export type ErrorResponsePrices = {
  errors?: Array<ErrorPrices>
}

/**
 * This is a json-api style part of an error response
 */
export type ErrorModifiers = {
  detail?: string
  status?: string
  title?: string
}

/**
 * This is a json-api style error response
 */
export type ErrorResponseModifiers = {
  errors?: Array<ErrorModifiers>
}

/**
 * The sales price that an item is eligible for based on the price book.
 */
export type Sales = {
  [key: string]: Sale
}

/**
 * A collection of one or more currencies objects that consists of the [**three-letter ISO code**](https://www.iso.org/iso-3166-country-codes.html) of the currencies associated with this price and the amount. This is the product's price.
 */
export type Currencies = {
  [key: string]: Amount
}

/**
 * The schedule of the sale. Contains an optional `valid_from` and `valid_to` parameter for the start and end date of a sale.
 *
 * For sale prices in the same price book:
 *
 * - the schedules must not be exactly the same.
 * - schedules can partially overlap. If the schedule does contain overlapping sales prices, the sale price of the smallest sale period is chosen.
 * - if you have just one sale price, without a schedule, this is effectively a permanent price. If you want to add more sale prices to the price book, you must configure a schedule for the sale price.
 *
 * Sale prices in different price books can have overlapping schedules.
 *
 */
export type Schedule = {
  /**
   * The start date of the sale.
   */
  valid_from?: Date | null
  /**
   * The end date of the sale.
   */
  valid_to?: Date | null
} | null

/**
 * The name of the sale, such as `Summer Sale`.
 */
export type Sale = {
  /**
   * A list of product IDs in a bundle that you want to specify a sale price for.
   */
  bundle_ids?: Array<string>
  schedule?: Schedule
  currencies?: Currencies
}

/**
 * The name of the tier, for example, `Pencils`.
 */
export type TierPrice = {
  /**
   * The minimum quantity of 1 or more defined for the specified price. If a minimum quantity is not specified, an error is returned.
   */
  minimum_quantity?: BigInt | null
  /**
   * The price for each quantity.
   */
  amount?: BigInt | null
}

/**
 * The three-letter ISO code for the currency associated with this price.
 */
export type Amount = {
  /**
   * The price in the lowest denomination for the specified currency. This is a product's list price.
   */
  amount?: BigInt | null
  /**
   * Whether this price includes tax.
   */
  includes_tax?: boolean
  /**
   * The price tier that an item is eligible for based on the quantity purchased. You cannot have conflicting tiers within the same currencies block.
   */
  tiers?: {
    [key: string]: TierPrice
  }
}

/**
 * Always `pricebook`.
 */
export type Type = "pricebook"

/**
 * A price book with the following attributes.
 */
export type Pricebook = {
  /**
   * A unique identifier of a price book.
   */
  id: string
  /**
   * Always `pricebook`.
   */
  type: "pricebook"
  attributes: {
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
    /**
     * A brief description that outlines the purpose of a price book, for example, flash sale pricing or preferred customer pricing.
     */
    description?: string | null
    /**
     * The name of a price book. Price books must have a unique name
     */
    name: string | null
    /**
     * The date and time when the price book was created.
     */
    created_at: Date
    /**
     * The date and time when the price book was last updated.
     */
    updated_at: Date
  }
  meta?: {
    /**
     * The resource owner, either `organization` or `store`.
     */
    owner?: string | null
  }
}

/**
 * Updates the specified price book.
 */
export type PricebookUpdate = {
  /**
   * The unique identifier of a price book.
   */
  id: string
  /**
   * Always `pricebook`.
   */
  type: "pricebook"
  attributes: {
    /**
     * A brief description that describes a price book, for example, flash sale pricing or preferred customer pricing.
     */
    description?: string | null
    /**
     * The name of a price book. Price books must have a unique name.
     */
    name?: string | null
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
  }
}

export type PricebookCreate = {
  type: "pricebook"
  attributes: {
    /**
     * A brief description that describes the purpose of a price book, for example, flash sale pricing or preferred customer pricing.
     */
    description?: string | null
    /**
     * The name of the price book. Price books must have a unique name.
     */
    name: string
    /**
     * A unique attribute that you can use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
  }
}

export type PricebookCreateData = {
  data: PricebookCreate
}

export type PricebookUpdateData = {
  data: PricebookUpdate
}

/**
 * Price book replicate request.
 */
export type PricebookReplicate = {
  type: "pricebook"
  attributes: {
    /**
     * A brief description outlining the purpose of a price book, such as flash sale pricing or preferred customer pricing.
     */
    description?: string | null
    /**
     * The name of the price book. Price books must have a unique name.
     */
    name?: string | null
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
  }
}

/**
 * Json-api style data object containing a price book to be replicated.
 */
export type PricebookReplicateData = {
  data: PricebookReplicate
}

/**
 * Json-api style data object containing a price book and its prices.
 */
export type PricebookWithPricesData = {
  data: Pricebook
  links?: LinksPricebook
  included?: Array<ProductPrice>
}

/**
 * A price book with the following attributes.
 */
export type PricebookData = {
  data: Pricebook
  links?: LinksPricebook
}

/**
 * Top level entity in the jobs domain model. It contains a job details.
 */
export type Job = {
  id: string
  attributes: {
    created_at: Date
    updated_at: Date
    started_at?: Date | null
    completed_at?: Date | null
    type: string
    status: string
  }
  meta: {
    x_request_id: string
  }
}

/**
 * Json-api style data object containing a job.
 */
export type JobData = {
  data: Job
}

/**
 * Contains the results for the entire collection.
 */
export type PageMetaNoCounts = {
  page?: {
    /**
     * The maximum number of records for all pages.
     */
    limit?: number
    /**
     * The current offset by number of pages.
     */
    offset?: number
    /**
     * The current number of pages.
     */
    current?: number
    /**
     * The total number of records for the entire collection.
     */
    total?: number
  }
}

/**
 * Contains the results for the entire collection.
 */
export type PageMeta = {
  results?: {
    /**
     * Total number of results for the entire collection.
     */
    total?: number | null
  }
  page?: {
    /**
     * The maximum number of records for all pages.
     */
    limit?: number
    /**
     * The current offset by number of pages.
     */
    offset?: number
    /**
     * The current number of pages.
     */
    current?: number
    /**
     * The total number of records for the entire collection.
     */
    total?: number
  }
}

/**
 * Json-api style array containing a list of price books
 */
export type PricebookListData = {
  meta?: PageMeta
  data: Array<Pricebook>
  links?: LinksPricebooks
}

export type ProductPriceCreateArg = {
  type: "product-price"
  attributes: {
    currencies: Currencies
    /**
     * The product SKU that the prices belongs to.
     */
    sku: string
    sales?: Sales
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
    admin_attributes?: AdminAttributes
    shopper_attributes?: ShopperAttributes
  }
}

export type ProductPrice = {
  type: "product-price"
  /**
   * The unique attribute associated with the price book. This can be an external reference from a separate company system, for example. The maximum length is 2048 characters.
   */
  pricebook_external_ref?: string | null
  attributes: {
    currencies?: Currencies
    /**
     * The product SKU that the price belongs to.
     */
    sku: string
    sales?: Sales
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
    /**
     * The date and time when the price was created.
     */
    created_at?: Date
    /**
     * The date and time when the price was last updated.
     */
    updated_at?: Date
    admin_attributes?: AdminAttributes
    shopper_attributes?: ShopperAttributes
  }
  /**
   * The unique identifier for the product price.
   */
  id: string
  /**
   * Information that provides context to other data sets.
   */
  meta?: {
    /**
     * The resource owner, either `organization` or `store`.
     */
    owner?: string | null
    /**
     * The unique identifier of the price book.
     */
    pricebook_id?: string
  }
}

/**
 * You can add custom attributes to a product price. For example, you may want to add custom attributes that can automate price updates based on predefined rules, saving time and reducing human error or you might want to integrate price attributes with your other company systems, (ERP, CRM) ensuring consistency and accuracy across platforms.
 *
 * `admin_attributes` are not displayed in catalogs. This means `admin_attributes` can only be viewed by administrators. If you want a custom attribute to be displayed in a catalog, you must add a `shopper_attribute`.
 *
 * `admin_attributes` are structured as key-value pairs. Both the keys and values are `strings`. You can have up to 100 keys.
 *
 */
export type AdminAttributes = {
  [key: string]: string | null
}

/**
 * You can add custom attributes to a product price. For example, you can set prices based on customer segments. For instance, you can offer different prices for wholesale and retail customers or provide discounts to loyal customers. Following on from this, you might want to offer personalized offers and prices, enhancing the shopping experience.
 *
 * `shopper_attributes` are displayed in catalogs. This means `shopper_attributes` can be viewed by both shoppers and administrators. If you do not want a custom attribute to be displayed in a catalog, you must add an `admin_attribute`.
 *
 * `shopper_attributes` are structured as key-value pairs. Both the keys and values are `strings`. You can have up to 100 keys.
 *
 */
export type ShopperAttributes = {
  [key: string]: string | null
}

/**
 * A product price with the following attributes.
 */
export type ProductPriceCreateData = {
  data: ProductPriceCreateArg
}

/**
 * A product price with the following attributes.
 */
export type ProductPriceData = {
  data: ProductPrice
  links?: LinksPrice
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksPricebook = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
}

/**
 * Links are used to allow you to move between requests. Single entities use a self parameter with a link to that specific resource. Sometimes, there aren’t enough entities for a project to fill multiple pages. In this situation, we return some defaults, instead of expecting you to check for these special cases.
 */
export type LinksPricebooks = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
  /**
   * Always the first page.
   */
  first?: string | null
  /**
   * This is `null` if there is only one page.
   */
  last?: string | null
  /**
   * This is `null` if there is only one page.
   */
  prev?: string | null
  /**
   * This is `null` if there is only one page.
   */
  next?: string | null
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksPrice = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksPrices = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
  /**
   * Always the first page.
   */
  first?: string | null
  /**
   * This is `null` if there is only one page.
   */
  last?: string | null
  /**
   * This is `null` if there is only one page.
   */
  prev?: string | null
  /**
   * This is `null` if there is only one page.
   */
  next?: string | null
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksPricesNew = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
  /**
   * Always the first page.
   */
  first?: string | null
  /**
   * This is `null` if there is only one page.
   */
  prev?: string | null
  /**
   * This is `null` if there is only one page.
   */
  next?: string | null
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksModifier = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
}

/**
 * Links are used to allow you to move between requests.
 */
export type LinksModifiers = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
  /**
   * Always the first page.
   */
  first?: string | null
  /**
   * This is `null` if there is only one page.
   */
  last?: string | null
  /**
   * This is `null` if there is only one page.
   */
  prev?: string | null
  /**
   * This is `null` if there is only one page.
   */
  next?: string | null
}

/**
 * Json-api style array containing a list of product prices.
 */
export type ProductPriceListData = {
  meta?: PageMeta
  data: Array<ProductPrice>
  links?: LinksPrices
}

/**
 * Json-api style array containing a list of prices.
 */
export type PriceListData = {
  meta?: PageMetaNoCounts
  data: Array<ProductPrice>
  links?: LinksPricesNew
}

/**
 * There are three modifier types.
 * * `price_increment` - Increases the price of a product.
 * * `price_decrement` - Decreases the price of a product.
 * * `price_equals` - Sets the price of a product to the amount you specify.
 *
 */
export type ModifierType =
  | "price_equals"
  | "price_increment"
  | "price_decrement"

/**
 * A price modifier with the following attributes.
 */
export type PriceModifier = {
  type: "price-modifier"
  /**
   * The unique attribute associated with the price book. This can be an external reference from a separate company system, for example. The maximum length is 2048 characters.
   */
  pricebook_external_ref?: string | null
  attributes: {
    /**
     * A unique identifier associated with the price modifier. This can be an external reference from a separate company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
    currencies: Currencies
    /**
     * A name for the modifier. You must give the price modifier a unique name. Price modifier names are case-sensitive.
     */
    name: string
    /**
     * There are three modifier types.
     * * `price_increment` - Increases the price of a product.
     * * `price_decrement` - Decreases the price of a product.
     * * `price_equals` - Sets the price of a product to the amount you specify.
     *
     */
    modifier_type: "price_equals" | "price_increment" | "price_decrement"
    /**
     * The date and time when the price book was created.
     */
    created_at?: Date
    /**
     * The date and time when the price book was last updated.
     */
    updated_at?: Date
  }
  /**
   * A unique identifier for the price modifier.
   */
  id: string
  meta?: {
    /**
     * The product owner, either `organization` or `store`.
     */
    owner?: string | null
  }
}

/**
 * Json-api style data object containing a single price modifier.
 */
export type PriceModifierData = {
  data: PriceModifier
  links?: LinksModifier
}

/**
 * Price modifier update request.
 */
export type PriceModifierUpdate = {
  /**
   * A unique identifier for the price modifier.
   */
  id: string
  type: "price-modifier"
  attributes: {
    currencies?: Currencies
    /**
     * A name for the modifier. You must give the price modifier a unique name. Price modifier names are case-sensitive
     */
    name?: string | null
    /**
     * There are three modifier types.
     *
     * * `price_increment` - Increases the price of a product.
     * * `price_decrement` - Decreases the price of a product.
     * * `price_equals` - Sets the price of a product to the amount you specify.
     *
     */
    modifier_type?: "price_equals" | "price_increment" | "price_decrement"
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
  }
}

/**
 * Json-api style data object containing a price modifier to be updated.
 */
export type PriceModifierUpdateData = {
  data: PriceModifierUpdate
}

export type PriceModifierCreate = {
  type: "price-modifier"
  attributes: {
    currencies: Currencies
    /**
     * A name for the modifier. You must give the price modifier a unique name. Price modifier names are case-sensitive.
     */
    name: string
    /**
     * There are three modifier types.
     * * `price_increment` - Increases the price of a product.
     * * `price_decrement` - Decreases the price of a product.
     * * `price_equals` - Sets the price of a product to the amount you specify.
     *
     */
    modifier_type: "price_equals" | "price_increment" | "price_decrement"
    /**
     * A unique attribute that you could use to contain information from another company system, for example. The maximum length is 2048 characters.
     */
    external_ref?: string | null
  }
}

/**
 * Json-api style data object containing a price modifier to be created.
 */
export type PriceModifierCreateData = {
  data: PriceModifierCreate
}

/**
 * Json-api style array containing a list of price modifiers.
 */
export type PriceModifierListData = {
  meta?: PageMeta
  data: Array<PriceModifier>
  links?: LinksModifiers
}

/**
 * You can filter on this endpoint. See [Filtering](#filtering).
 *
 */
export type FilterPricebook = string

/**
 * This endpoint supports filtering. See [Filtering]().
 *
 */
export type FilterPrice = string

/**
 * This endpoint supports filtering. See [Filtering]().
 *
 */
export type FilterModifier = string

/**
 * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
 */
export type Limit = BigInt

/**
 * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page offset is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
 */
export type Offset = BigInt

export type GetPricebooksData = {
  body?: never
  path?: never
  query?: {
    /**
     * You can filter on this endpoint. See [Filtering](#filtering).
     *
     */
    filter?: string
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[limit]"?: BigInt
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page offset is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[offset]"?: BigInt
  }
  url: "/pcm/pricebooks"
}

export type GetPricebooksErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type GetPricebooksError = GetPricebooksErrors[keyof GetPricebooksErrors]

export type GetPricebooksResponses = {
  /**
   * The list of price books.
   */
  200: PricebookListData
}

export type GetPricebooksResponse =
  GetPricebooksResponses[keyof GetPricebooksResponses]

export type CreatePricebookData = {
  /**
   * Creates a price book with the following attributes.
   */
  body: PricebookCreateData
  path?: never
  query?: never
  url: "/pcm/pricebooks"
}

export type CreatePricebookErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type CreatePricebookError =
  CreatePricebookErrors[keyof CreatePricebookErrors]

export type CreatePricebookResponses = {
  /**
   * A price book with the following attributes.
   */
  201: PricebookData
}

export type CreatePricebookResponse =
  CreatePricebookResponses[keyof CreatePricebookResponses]

export type DeletePricebookByIdData = {
  body?: never
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}"
}

export type DeletePricebookByIdErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type DeletePricebookByIdError =
  DeletePricebookByIdErrors[keyof DeletePricebookByIdErrors]

export type DeletePricebookByIdResponses = {
  /**
   * A 204 response indicates that the price book has been deleted.
   */
  204: void
}

export type DeletePricebookByIdResponse =
  DeletePricebookByIdResponses[keyof DeletePricebookByIdResponses]

/**
 * To include product prices in a response, add `include=prices`.
 */
export type Include = "prices"

export type GetPricebookByIdData = {
  body?: never
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: {
    /**
     * To include product prices in a response, add `include=prices`.
     */
    include?: "prices"
  }
  url: "/pcm/pricebooks/{pricebookID}"
}

export type GetPricebookByIdErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type GetPricebookByIdError =
  GetPricebookByIdErrors[keyof GetPricebookByIdErrors]

export type GetPricebookByIdResponses = {
  /**
   * The price book.
   */
  200: PricebookWithPricesData
}

export type GetPricebookByIdResponse =
  GetPricebookByIdResponses[keyof GetPricebookByIdResponses]

export type UpdatePricebookData = {
  /**
   * An updated price book with the following attributes.
   */
  body: PricebookUpdateData
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}"
}

export type UpdatePricebookErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type UpdatePricebookError =
  UpdatePricebookErrors[keyof UpdatePricebookErrors]

export type UpdatePricebookResponses = {
  /**
   * An updated price book with the following attributes.
   */
  200: PricebookData
}

export type UpdatePricebookResponse =
  UpdatePricebookResponses[keyof UpdatePricebookResponses]

export type ImportPricebookData = {
  body?: never
  path?: never
  query?: never
  url: "/pcm/pricebooks/import"
}

export type ImportPricebookErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type ImportPricebookError =
  ImportPricebookErrors[keyof ImportPricebookErrors]

export type ImportPricebookResponses = {
  /**
   * The created price book
   */
  201: JobData
}

export type ImportPricebookResponse =
  ImportPricebookResponses[keyof ImportPricebookResponses]

export type ReplicatePricebookData = {
  /**
   * A replicated price book with the following attributes.
   */
  body?: PricebookReplicateData
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/replicate"
}

export type ReplicatePricebookErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePricebooks
}

export type ReplicatePricebookError =
  ReplicatePricebookErrors[keyof ReplicatePricebookErrors]

export type ReplicatePricebookResponses = {
  /**
   * A replicated price book with the following attributes.
   */
  201: PricebookData
}

export type ReplicatePricebookResponse =
  ReplicatePricebookResponses[keyof ReplicatePricebookResponses]

export type GetProductPricesData = {
  body?: never
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: {
    /**
     * This endpoint supports filtering. See [Filtering]().
     *
     */
    filter?: string
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[limit]"?: BigInt
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page offset is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[offset]"?: BigInt
  }
  url: "/pcm/pricebooks/{pricebookID}/prices"
}

export type GetProductPricesErrors = {
  /**
   * Unexpected error
   */
  default: ErrorResponsePrices
}

export type GetProductPricesError =
  GetProductPricesErrors[keyof GetProductPricesErrors]

export type GetProductPricesResponses = {
  /**
   * The product price list.
   */
  200: ProductPriceListData
}

export type GetProductPricesResponse =
  GetProductPricesResponses[keyof GetProductPricesResponses]

export type CreateProductPriceData = {
  /**
   * A product price with the following attributes.
   */
  body: ProductPriceCreateData
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/prices"
}

export type CreateProductPriceErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePrices
}

export type CreateProductPriceError =
  CreateProductPriceErrors[keyof CreateProductPriceErrors]

export type CreateProductPriceResponses = {
  /**
   * A product price with the following attributes.
   */
  201: ProductPriceData
}

export type CreateProductPriceResponse =
  CreateProductPriceResponses[keyof CreateProductPriceResponses]

export type DeleteProductPriceData = {
  body?: never
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
    /**
     * A unique identifier of a price book price.
     */
    priceID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/prices/{priceID}"
}

export type DeleteProductPriceErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePrices
}

export type DeleteProductPriceError =
  DeleteProductPriceErrors[keyof DeleteProductPriceErrors]

export type DeleteProductPriceResponses = {
  /**
   * A 204 response indicates that the product prices have been deleted
   */
  204: void
}

export type DeleteProductPriceResponse =
  DeleteProductPriceResponses[keyof DeleteProductPriceResponses]

export type GetProductPriceByIdData = {
  body?: never
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
    /**
     * A unique identifier of a price book price.
     */
    priceID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/prices/{priceID}"
}

export type GetProductPriceByIdErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePrices
}

export type GetProductPriceByIdError =
  GetProductPriceByIdErrors[keyof GetProductPriceByIdErrors]

export type GetProductPriceByIdResponses = {
  /**
   * The product price.
   */
  200: ProductPriceData
}

export type GetProductPriceByIdResponse =
  GetProductPriceByIdResponses[keyof GetProductPriceByIdResponses]

export type UpdateProductPriceData = {
  /**
   * The updated product price
   */
  body: ProductPriceData
  path: {
    /**
     * The unique identifier of a price book.
     */
    pricebookID: string
    /**
     * A unique identifier of a price book price.
     */
    priceID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/prices/{priceID}"
}

export type UpdateProductPriceErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponsePrices
}

export type UpdateProductPriceError =
  UpdateProductPriceErrors[keyof UpdateProductPriceErrors]

export type UpdateProductPriceResponses = {
  /**
   * An updated product price with the following attributes.
   */
  200: ProductPriceData
}

export type UpdateProductPriceResponse =
  UpdateProductPriceResponses[keyof UpdateProductPriceResponses]

export type GetPricesData = {
  body?: never
  path?: never
  query?: {
    /**
     * This endpoint supports filtering. See [Filtering]().
     *
     */
    filter?: string
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[limit]"?: BigInt
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page offset is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[offset]"?: BigInt
  }
  url: "/pcm/pricebooks/prices"
}

export type GetPricesErrors = {
  /**
   * Unexpected error
   */
  default: ErrorResponsePrices
}

export type GetPricesError = GetPricesErrors[keyof GetPricesErrors]

export type GetPricesResponses = {
  /**
   * The price list.
   */
  200: PriceListData
}

export type GetPricesResponse = GetPricesResponses[keyof GetPricesResponses]

export type GetPriceModifiersData = {
  body?: never
  path: {
    /**
     * Unique identifier of a Price Book
     */
    pricebookID: string
  }
  query?: {
    /**
     * This endpoint supports filtering. See [Filtering]().
     *
     */
    filter?: string
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[limit]"?: BigInt
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page offset is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[offset]"?: BigInt
  }
  url: "/pcm/pricebooks/{pricebookID}/modifiers"
}

export type GetPriceModifiersErrors = {
  /**
   * Unexpected error
   */
  default: ErrorResponseModifiers
}

export type GetPriceModifiersError =
  GetPriceModifiersErrors[keyof GetPriceModifiersErrors]

export type GetPriceModifiersResponses = {
  /**
   * The price modifier list.
   */
  200: PriceModifierListData
}

export type GetPriceModifiersResponse =
  GetPriceModifiersResponses[keyof GetPriceModifiersResponses]

export type CreatePriceModifierData = {
  /**
   * The price modifier to create within a price book.
   */
  body: PriceModifierCreateData
  path: {
    /**
     * Unique identifier of a Price Book
     */
    pricebookID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/modifiers"
}

export type CreatePriceModifierErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponseModifiers
}

export type CreatePriceModifierError =
  CreatePriceModifierErrors[keyof CreatePriceModifierErrors]

export type CreatePriceModifierResponses = {
  /**
   * The created price modifier
   */
  201: PriceModifierData
}

export type CreatePriceModifierResponse =
  CreatePriceModifierResponses[keyof CreatePriceModifierResponses]

export type DeletePriceModifierData = {
  body?: never
  path: {
    /**
     * Unique identifier of a Price Book
     */
    pricebookID: string
    /**
     * Unique identifier of a Price Book Modifier
     */
    modifierID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/modifiers/{modifierID}"
}

export type DeletePriceModifierErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponseModifiers
}

export type DeletePriceModifierError =
  DeletePriceModifierErrors[keyof DeletePriceModifierErrors]

export type DeletePriceModifierResponses = {
  /**
   * A 204 response indicates that the price modifiers have been deleted
   */
  204: void
}

export type DeletePriceModifierResponse =
  DeletePriceModifierResponses[keyof DeletePriceModifierResponses]

export type GetPriceModifierByIdData = {
  body?: never
  path: {
    /**
     * Unique identifier of a Price Book
     */
    pricebookID: string
    /**
     * Unique identifier of a Price Book Modifier
     */
    modifierID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/modifiers/{modifierID}"
}

export type GetPriceModifierByIdErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponseModifiers
}

export type GetPriceModifierByIdError =
  GetPriceModifierByIdErrors[keyof GetPriceModifierByIdErrors]

export type GetPriceModifierByIdResponses = {
  /**
   * The price modifier.
   */
  200: PriceModifierData
}

export type GetPriceModifierByIdResponse =
  GetPriceModifierByIdResponses[keyof GetPriceModifierByIdResponses]

export type UpdatePriceModifierData = {
  /**
   * The updated price modifier
   */
  body: PriceModifierUpdateData
  path: {
    /**
     * Unique identifier of a Price Book
     */
    pricebookID: string
    /**
     * Unique identifier of a Price Book Modifier
     */
    modifierID: string
  }
  query?: never
  url: "/pcm/pricebooks/{pricebookID}/modifiers/{modifierID}"
}

export type UpdatePriceModifierErrors = {
  /**
   * Unexpected error.
   */
  default: ErrorResponseModifiers
}

export type UpdatePriceModifierError =
  UpdatePriceModifierErrors[keyof UpdatePriceModifierErrors]

export type UpdatePriceModifierResponses = {
  /**
   * Updated price modifier.
   */
  200: PriceModifierData
}

export type UpdatePriceModifierResponse =
  UpdatePriceModifierResponses[keyof UpdatePriceModifierResponses]
