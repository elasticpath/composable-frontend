// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from "@hey-api/client-fetch"
import type {
  GetV2AccountAddressesData,
  GetV2AccountAddressesResponse,
  GetV2AccountAddressesError,
  DeleteV2AccountAddressData,
  DeleteV2AccountAddressResponse,
  DeleteV2AccountAddressError,
  GetV2AccountAddressData,
  GetV2AccountAddressResponse,
  GetV2AccountAddressError,
  PostV2AccountAddressData,
  PostV2AccountAddressResponse,
  PostV2AccountAddressError,
  PutV2AccountAddressData,
  PutV2AccountAddressResponse,
  PutV2AccountAddressError,
} from "./types.gen"

export const client = createClient(createConfig())

/**
 * Get Account Addresses
 * Get Account Addresses
 */
export const getV2AccountAddresses = <ThrowOnError extends boolean = false>(
  options: Options<GetV2AccountAddressesData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetV2AccountAddressesResponse,
    GetV2AccountAddressesError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/accounts/{accountID}/addresses",
  })
}

/**
 * Delete an Account Address
 * Delete a specific account within a store
 */
export const deleteV2AccountAddress = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV2AccountAddressData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteV2AccountAddressResponse,
    DeleteV2AccountAddressError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/accounts/{accountID}/addresses/{addressID}",
  })
}

/**
 * Get an Account Address
 * Get an Account Addresses
 */
export const getV2AccountAddress = <ThrowOnError extends boolean = false>(
  options: Options<GetV2AccountAddressData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetV2AccountAddressResponse,
    GetV2AccountAddressError,
    ThrowOnError
  >({
    ...options,
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/accounts/{accountID}/addresses/{addressID}",
  })
}

/**
 * Create an Account Address
 * Create an Account Address
 */
export const postV2AccountAddress = <ThrowOnError extends boolean = false>(
  options: Options<PostV2AccountAddressData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    PostV2AccountAddressResponse,
    PostV2AccountAddressError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/accounts/{accountID}/addresses/{addressID}",
  })
}

/**
 * Update an Account Address
 * Update an Account Address
 */
export const putV2AccountAddress = <ThrowOnError extends boolean = false>(
  options: Options<PutV2AccountAddressData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    PutV2AccountAddressResponse,
    PutV2AccountAddressError,
    ThrowOnError
  >({
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
    security: [
      {
        scheme: "bearer",
        type: "http",
      },
    ],
    url: "/v2/accounts/{accountID}/addresses/{addressID}",
  })
}
