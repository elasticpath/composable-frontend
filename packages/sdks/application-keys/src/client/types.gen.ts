// This file is auto-generated by @hey-api/openapi-ts

export type ApplicationKey = {
  /**
   * Specifies the name of the application key.
   */
  name?: string
  /**
   * Indicates the reserved rate limit for an application key. For more information, see [Application Keys Overview](/docs/api/application-keys/application-keys-introduction).
   */
  reserved_rate_limit?: number
  /**
   * Represents the type of object being returned. Always `application_key`.
   */
  type?: "application_key"
}

export type ApplicationKeyResponse = {
  /**
   * Specifies the unique id of the application key.
   */
  id?: string
  /**
   * Specifies the name of the application key.
   */
  name?: string
  /**
   * Represents the type of object being returned. Always `application_key`.
   */
  type?: "application_key"
  /**
   * Represents the unique `client_id`.
   */
  client_id?: string
  /**
   * Represents the unique `client_secret`.
   */
  client_secret?: string
  /**
   * Indicates the reserved rate limit for an application key. For more information, see [Application Keys Overview](/docs/api/application-keys/application-keys-introduction).
   */
  reserved_rate_limit?: number
  meta?: Meta
  links?: SelfLink
}

export type Meta = {
  timestamps?: Timestamps
}

export type ErrorResponse = {
  errors: Array<_Error>
}

export type _Error = {
  /**
   * A brief summary of the error.
   */
  title: string
  /**
   * The HTTP response code of the error.
   */
  status: string
  /**
   * Optional additional detail about the error.
   */
  detail?: string
}

export type PaginationMeta = {
  results: {
    /**
     * Total number of results for the entire collection.
     */
    total?: number
  }
  page: {
    /**
     * The maximum number of records for all pages.
     */
    limit?: number
    /**
     * The current offset by number of pages.
     */
    offset?: number
    /**
     * The current number of pages.
     */
    current?: number
    /**
     * The total number of records for the entire collection.
     */
    total?: number
  }
  /**
   * Total reserved rate limit.
   */
  total_reserved_rate_limit?: number
}

export type PaginationLinks = {
  /**
   * Always the current page.
   */
  current: string | null
  /**
   * Always the first page.
   */
  first: string | null
  /**
   * Always `null` if there is only one page.
   */
  last: string | null
  /**
   * Always `null` if there is only one page.
   */
  next: string | null
  /**
   * Always `null` if the user is on the first page.
   */
  prev: string | null
}

export type SelfLink = {
  /**
   * Represents a link to the specific resource.
   */
  self?: string
}

export type Timestamps = {
  /**
   * Specifies the creation date of the key.
   */
  readonly created_at?: string
  /**
   * Specifies the last updated date of the key.
   */
  readonly updated_at?: string
  /**
   * Specifies the approximate last used date of the key. A `null` value indicates that the key has not been used.
   */
  readonly last_used_at?: string
}

/**
 * The id of the Application Key.
 */
export type ApplicationKeyId = string

/**
 * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
 */
export type PageOffset = BigInt

/**
 * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
 */
export type PageLimit = BigInt

export type GetAllKeysData = {
  body?: never
  path?: never
  query?: {
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
     */
    "page[offset]"?: BigInt
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the [page length](/docs/api/settings/settings-introduction#page-length) store setting is used.
     */
    "page[limit]"?: BigInt
  }
  url: "/v2/application-keys"
}

export type GetAllKeysErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type GetAllKeysError = GetAllKeysErrors[keyof GetAllKeysErrors]

export type GetAllKeysResponses = {
  /**
   * OK
   */
  200: {
    data?: Array<ApplicationKeyResponse>
    meta?: PaginationMeta
    links?: PaginationLinks
  }
}

export type GetAllKeysResponse = GetAllKeysResponses[keyof GetAllKeysResponses]

export type CreateKeyData = {
  body: {
    data: ApplicationKey
  }
  path?: never
  query?: never
  url: "/v2/application-keys"
}

export type CreateKeyErrors = {
  /**
   * Bad request. The request failed validation.
   */
  400: ErrorResponse
  /**
   * Conflict
   */
  409: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type CreateKeyError = CreateKeyErrors[keyof CreateKeyErrors]

export type CreateKeyResponses = {
  /**
   * Created
   */
  201: {
    data?: ApplicationKeyResponse
  }
}

export type CreateKeyResponse = CreateKeyResponses[keyof CreateKeyResponses]

export type DeleteKeyData = {
  body?: never
  path: {
    /**
     * The id of the Application Key.
     */
    application_key_id: string
  }
  query?: never
  url: "/v2/application-keys/{application_key_id}"
}

export type DeleteKeyErrors = {
  /**
   * Not found. The requested entity does not exist.
   */
  404: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type DeleteKeyError = DeleteKeyErrors[keyof DeleteKeyErrors]

export type DeleteKeyResponses = {
  /**
   * No Content
   */
  204: void
}

export type DeleteKeyResponse = DeleteKeyResponses[keyof DeleteKeyResponses]

export type GetKeyData = {
  body?: never
  path: {
    /**
     * The id of the Application Key.
     */
    application_key_id: string
  }
  query?: never
  url: "/v2/application-keys/{application_key_id}"
}

export type GetKeyErrors = {
  /**
   * Not found. The requested entity does not exist.
   */
  404: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type GetKeyError = GetKeyErrors[keyof GetKeyErrors]

export type GetKeyResponses = {
  /**
   * OK
   */
  200: {
    data: ApplicationKeyResponse
  }
}

export type GetKeyResponse = GetKeyResponses[keyof GetKeyResponses]

export type UpdateKeyData = {
  body: {
    data: ApplicationKey
  }
  path: {
    /**
     * The id of the Application Key.
     */
    application_key_id: string
  }
  query?: never
  url: "/v2/application-keys/{application_key_id}"
}

export type UpdateKeyErrors = {
  /**
   * Not found. The requested entity does not exist.
   */
  404: ErrorResponse
  /**
   * Conflict
   */
  409: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  default: ErrorResponse
}

export type UpdateKeyError = UpdateKeyErrors[keyof UpdateKeyErrors]

export type UpdateKeyResponses = {
  /**
   * OK
   */
  200: {
    data: ApplicationKeyResponse
  }
}

export type UpdateKeyResponse = UpdateKeyResponses[keyof UpdateKeyResponses]
