// This file is auto-generated by @hey-api/openapi-ts

export type ErrorResponse = {
  errors: Array<_Error>
}

export type File = {
  /**
   * The unique identifier for this file.
   */
  id?: Uuid
  /**
   * The type represents the object being returned.
   */
  type?: string
  /**
   * The name of the file.
   */
  file_name?: string
  /**
   * The mime type of the file.
   */
  mime_type?: string
  /**
   * The size of the file. Required when uploading files.
   */
  file_size?: number
  /**
   * DEPRECATED Whether the file public or not. Required when uploading files.
   */
  public?: boolean
  meta?: FileMeta
  links?: Links
  link?: FileLink
}

export type FileMeta = {
  /**
   * The date and time the file was created.
   */
  timestamps?: {
    /**
     * The date and time the file was created.
     */
    created_at?: string
  }
  /**
   * The file dimensions.
   */
  dimensions?: {
    /**
     * The width of the file.
     */
    width?: number
    /**
     * The height of the file.
     */
    height?: number
  }
}

export type ResultsMeta = {
  /**
   * Contains the results for the entire collection.
   */
  page?: {
    /**
     * The maximum number of records for all pages.
     */
    limit?: number
    /**
     * The current offset by number of pages.
     */
    offset?: number
    /**
     * The current number of pages.
     */
    current?: number
    /**
     * The total number of records for the entire collection.
     */
    total?: number
  }
  /**
   * Contains the results for the entire collection.
   */
  results?: {
    /**
     * The total number of records for the entire collection.
     */
    total?: number
  }
}

/**
 * Links are used to allow you to move between requests.
 */
export type Links = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string
}

/**
 * Links are used to allow you to move between requests.
 */
export type ResultsLinks = {
  /**
   * Single entities use a self parameter with a link to that specific resource.
   */
  self?: string | null
  /**
   * Always the first page.
   */
  first?: string | null
  /**
   * This is `null` if there is only one page.
   */
  last?: string | null
}

/**
 * The publicly available URL for this file.
 */
export type FileLink = {
  /**
   * The publicly available URL for this file.
   */
  href?: string
}

export type Uuid = string

export type _Error = {
  /**
   * The HTTP response code of the error.
   */
  status: number
  /**
   * A brief summary of the error.
   */
  title: string
  /**
   * Optional additional detail about the error.
   */
  detail?: string
  /**
   * Internal request ID.
   */
  request_id?: string
  /**
   * Additional supporting meta data for the error.
   */
  meta?: {
    [key: string]: unknown
  }
}

/**
 *
 * Filtering is available for this endpoint. See [Filtering](/docs/api/pxm/files/get-all-files#filtering).
 *
 */
export type Filter = string

/**
 * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
 */
export type PageOffset = string

/**
 * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
 */
export type PageLimit = string

export type GetAllFilesData = {
  body?: never
  path?: never
  query?: {
    /**
     *
     * Filtering is available for this endpoint. See [Filtering](/docs/api/pxm/files/get-all-files#filtering).
     *
     */
    filter?: string
    /**
     * The maximum number of records per page for this response. You can set this value up to 100. If no page size is set, the the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[limit]"?: string
    /**
     * The current offset by number of records, not pages. Offset is zero-based. The maximum records you can offset is 10,000. If no page size is set, the [**page length**](/docs/commerce-cloud/global-project-settings/settings-overview#page-length) store setting is used.
     */
    "page[offset]"?: string
  }
  url: "/v2/files"
}

export type GetAllFilesErrors = {
  /**
   * Internal server error. There was a system failure in the platform.
   */
  500: ErrorResponse
}

export type GetAllFilesError = GetAllFilesErrors[keyof GetAllFilesErrors]

export type GetAllFilesResponses = {
  /**
   * OK
   */
  200: {
    data?: Array<File>
    meta?: ResultsMeta
    links?: ResultsLinks
  }
}

export type GetAllFilesResponse =
  GetAllFilesResponses[keyof GetAllFilesResponses]

export type CreateAFileData = {
  body: {
    /**
     * Indicates the file you want to upload.
     */
    file?: Blob | File
    /**
     * Use this parameter to reference a file stored at a specific location. This must be the URL that points to an image file.
     */
    file_location?: string
  }
  path?: never
  query?: never
  url: "/v2/files"
}

export type CreateAFileErrors = {
  /**
   * Bad request. The request failed validation.
   */
  400: ErrorResponse
  /**
   * Bad request. The request failed validation.
   */
  422: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  500: ErrorResponse
}

export type CreateAFileError = CreateAFileErrors[keyof CreateAFileErrors]

export type CreateAFileResponses = {
  /**
   * Created
   */
  201: {
    data?: File
  }
}

export type CreateAFileResponse =
  CreateAFileResponses[keyof CreateAFileResponses]

export type DeleteAFileData = {
  body?: never
  path: {
    /**
     * The unique identifier of the file you want to delete.
     */
    fileID: string
  }
  query?: never
  url: "/v2/files/{fileID}"
}

export type DeleteAFileErrors = {
  /**
   * Bad request. The request failed validation.
   */
  403: ErrorResponse
  /**
   * Forbidden. The operation is forbidden on this entity.
   */
  404: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  500: ErrorResponse
}

export type DeleteAFileError = DeleteAFileErrors[keyof DeleteAFileErrors]

export type DeleteAFileResponses = {
  /**
   * No Content
   */
  204: void
}

export type DeleteAFileResponse =
  DeleteAFileResponses[keyof DeleteAFileResponses]

export type GetAFileData = {
  body?: never
  path: {
    /**
     * The unique identifier for a file.
     */
    fileID: string
  }
  query?: never
  url: "/v2/files/{fileID}"
}

export type GetAFileErrors = {
  /**
   * Forbidden. The operation is forbidden on this entity.
   */
  404: ErrorResponse
  /**
   * Internal server error. There was a system failure in the platform.
   */
  500: ErrorResponse
}

export type GetAFileError = GetAFileErrors[keyof GetAFileErrors]

export type GetAFileResponses = {
  200: {
    data?: File
  }
}

export type GetAFileResponse = GetAFileResponses[keyof GetAFileResponses]
