name: Generate Examples

on:
  push:
    branches-ignore:
      - main
      - changeset-release/main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-examples:
    name: Create latest examples
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.commit_changes.outputs.commit_long_sha }}
    steps:
      - name: Prepare Check Runs
        uses: dflydev/check-runs-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checks: |
            [
              { "id": "packages-unit-int-tests", "name": "Packages unit and Integration tests" },
              { "id": "examples-unit-int-tests", "name": "Examples unit and Integration tests" }
            ]
          status: "queued"
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install Dependencies
        run: yarn install

      - name: Build schematic schema types
        run: yarn generate

      - name: Report "Packages unit and Integration tests" starting
        uses: dflydev/check-runs-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: packages-unit-int-tests
          status: in_progress

      - name: Run unit/integration tests
        run: yarn test:packages
        id: packages-unit-int-tests
        continue-on-error: true

      - name: Report "Run unit/integration tests" conclusion
        if: always()
        uses: dflydev/check-runs-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: packages-unit-int-tests
          conclusion: ${{ steps.packages-unit-int-tests.outcome }}
          fail-on-error: true

      - name: Build latest Mason CLI
        run: yarn build:cli

      - name: Generate latest examples using script
        run: yarn scaffold:local

      - name: Commit changes
        id: commit_changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'chore: generated latest examples'
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          default_author: github_actions
          add: '*'

      - name: Install additional dependencies
        run: yarn install

      - name: Run unit/integration tests
        run: yarn test

#  commit-latest-examples:
#    name: Commit latest examples
#    needs: generate-examples
#    runs-on: ubuntu-latest
#    outputs:
#      commit_sha: ${{ steps.commit_changes.outputs.commit_long_sha }}
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v3
#
#      - name: Install rimraf
#        run: npm i -g rimraf@3.0.0
#
#      - name: Clear all previous examples versions
#        run: mkdir -p examples && rimraf ./examples/*
#
#      - uses: actions/download-artifact@v3
#        with:
#          path: temp-artifact-workspace
#
#
#
#      - name: Display structure of downloaded files
#        run: ls -R


#      - name: Commit changes
#        id: commit_changes
#        uses: EndBug/add-and-commit@v9
#        with:
#          message: 'chore: generated latest ${{ matrix.example }} example'
#          committer_name: GitHub Actions
#          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
#          default_author: github_actions
#          add: '*'

#  build:
#    name: Create latest examples
#    runs-on: ubuntu-latest
#    outputs:
#      commit_sha: ${{ steps.commit_changes.outputs.commit_long_sha }}
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v3
#
#      - name: Setup Node.js 16.x
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#
#      - name: Install Dependencies
#        run: yarn
#
#      - name: Make .env.examples file
#        run: |
#          echo "${{ secrets.EXAMPLES_ENV_FILE }}" > .env.examples
#
#      - name: Build Latest CLI and generate examples
#        run: yarn examples
#
#      - name: Commit changes
#        id: commit_changes
#        uses: EndBug/add-and-commit@v9
#        with:
#          message: 'chore: generate latest examples'
#          committer_name: GitHub Actions
#          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
#          default_author: github_actions
#          add: '*'
#
#      - name: Display structure of directory pre zip
#        run: ls -Ra
#
#      - name: Zip build artifact
#        run: zip app-build.zip ./.next -r
#
#      - name: Display structure of directory post zip
#        run: ls -Ra
#
#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: app-build
#          path: ./app-build.zip
#
#  run-unit-basic:
#    name: Run unit tests for examples
#    needs: build
#    defaults:
#      run:
#        working-directory: examples/basic
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: app-build
#
#      - name: Display structure of downloaded files pre unzip
#        run: ls -R
#
#      - name: unzip build artifact
#        run: unzip app-build.zip
#
#      - name: Display structure of downloaded files post unzip
#        run: ls -R
#
#      - name: Run unit tests for latest examples
#        run: yarn test:coverage
#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: coverage
#          path: examples/basic/coverage
#
#      - name: "Create a check run"
#        if: ${{ needs.build.outputs.commit_sha }}
#        uses: actions/github-script@v6
#        env:
#          parameter_url: '${{ github.event.workflow_run.html_url }}'
#        with:
#          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
#          script: |
#            await github.rest.checks.create({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              head_sha: "${{ needs.build.outputs.commit_sha }}",
#              name: "Unit Tests",
#              status: "completed",
#              conclusion: "success",
#              output: {
#                title: "Unit Tests",
#                summary: "my *check* summary",
#                text: "my text",
#              },
#            });
#
#  run-e2e-basic:
#    name: Run e2e tests for examples
#    needs: build
#    defaults:
#      run:
#        working-directory: examples/basic
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout files
#        uses: Bhacaz/checkout-files@v2
#        with:
#          files: examples/basic
#          branch: ${{ needs.build.outputs.commit_sha || github.sha }}
#
#      - name: Make .env.test file
#        run: |
#          echo "${{ secrets.TEST_ENV_FILE }}" > .env.test
#
#      - name: Install Dependencies
#        run: yarn --ignore-scripts
#
#      - name: Run e2e tests for latest examples
#        run: yarn test:ci:e2e
#      - name: Upload test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-results
#          path: examples/basic/test-results
#
#      - name: "Create a check run"
#        if: ${{ needs.build.outputs.commit_sha }}
#        uses: actions/github-script@v6
#        env:
#          parameter_url: '${{ github.event.workflow_run.html_url }}'
#        with:
#          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
#          script: |
#            await github.rest.checks.create({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              head_sha: "${{ needs.build.outputs.commit_sha }}",
#              name: "Generate Examples",
#              status: "completed",
#              conclusion: "success",
#              output: {
#                title: "Generate Examples",
#                summary: "my *check* summary",
#                text: "my text",
#              },
#            });
